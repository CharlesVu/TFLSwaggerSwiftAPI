//
// ModeAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class ModeAPI: APIBase {
    /**
     Gets the nearest arrival prediction(s) for a given mode
     
     - parameter mode: (path) A mode name e.g. tube,dlr 
     - parameter count: (query) A number of arrivals to return (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func modeArrivals(mode: String, count: Int32? = nil, completion: @escaping ((_ data: [Prediction]?,_ error: Error?) -> Void)) {
        modeArrivalsWithRequestBuilder(mode: mode, count: count).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Gets the nearest arrival prediction(s) for a given mode
     - GET /Mode/{mode}/Arrivals
     - examples: [{contentType=application/json, example=[ {
  "modeName" : "aeiou",
  "bearing" : "aeiou",
  "timing" : {
    "read" : "2000-01-23T04:56:07.000+00:00",
    "insert" : "2000-01-23T04:56:07.000+00:00",
    "received" : "2000-01-23T04:56:07.000+00:00",
    "source" : "2000-01-23T04:56:07.000+00:00",
    "countdownServerAdjustment" : "aeiou",
    "sent" : "2000-01-23T04:56:07.000+00:00"
  },
  "lineId" : "aeiou",
  "lineName" : "aeiou",
  "destinationNaptanId" : "aeiou",
  "towards" : "aeiou",
  "currentLocation" : "aeiou",
  "timeToLive" : "2000-01-23T04:56:07.000+00:00",
  "expectedArrival" : "2000-01-23T04:56:07.000+00:00",
  "naptanId" : "aeiou",
  "destinationName" : "aeiou",
  "operationType" : 123,
  "stationName" : "aeiou",
  "id" : "aeiou",
  "vehicleId" : "aeiou",
  "platformName" : "aeiou",
  "timeToStation" : 123,
  "direction" : "aeiou",
  "timestamp" : "2000-01-23T04:56:07.000+00:00"
} ]}, {contentType=application/xml, example=<null>
  <id>string</id>
  <operationType>0</operationType>
  <vehicleId>string</vehicleId>
  <naptanId>string</naptanId>
  <stationName>string</stationName>
  <lineId>string</lineId>
  <lineName>string</lineName>
  <platformName>string</platformName>
  <direction>string</direction>
  <bearing>string</bearing>
  <destinationNaptanId>string</destinationNaptanId>
  <destinationName>string</destinationName>
  <timestamp>2000-01-23T04:56:07.000Z</timestamp>
  <timeToStation>0</timeToStation>
  <currentLocation>string</currentLocation>
  <towards>string</towards>
  <expectedArrival>2000-01-23T04:56:07.000Z</expectedArrival>
  <timeToLive>2000-01-23T04:56:07.000Z</timeToLive>
  <modeName>string</modeName>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "modeName" : "aeiou",
  "bearing" : "aeiou",
  "timing" : {
    "read" : "2000-01-23T04:56:07.000+00:00",
    "insert" : "2000-01-23T04:56:07.000+00:00",
    "received" : "2000-01-23T04:56:07.000+00:00",
    "source" : "2000-01-23T04:56:07.000+00:00",
    "countdownServerAdjustment" : "aeiou",
    "sent" : "2000-01-23T04:56:07.000+00:00"
  },
  "lineId" : "aeiou",
  "lineName" : "aeiou",
  "destinationNaptanId" : "aeiou",
  "towards" : "aeiou",
  "currentLocation" : "aeiou",
  "timeToLive" : "2000-01-23T04:56:07.000+00:00",
  "expectedArrival" : "2000-01-23T04:56:07.000+00:00",
  "naptanId" : "aeiou",
  "destinationName" : "aeiou",
  "operationType" : 123,
  "stationName" : "aeiou",
  "id" : "aeiou",
  "vehicleId" : "aeiou",
  "platformName" : "aeiou",
  "timeToStation" : 123,
  "direction" : "aeiou",
  "timestamp" : "2000-01-23T04:56:07.000+00:00"
} ]}, {contentType=application/xml, example=<null>
  <id>string</id>
  <operationType>0</operationType>
  <vehicleId>string</vehicleId>
  <naptanId>string</naptanId>
  <stationName>string</stationName>
  <lineId>string</lineId>
  <lineName>string</lineName>
  <platformName>string</platformName>
  <direction>string</direction>
  <bearing>string</bearing>
  <destinationNaptanId>string</destinationNaptanId>
  <destinationName>string</destinationName>
  <timestamp>2000-01-23T04:56:07.000Z</timestamp>
  <timeToStation>0</timeToStation>
  <currentLocation>string</currentLocation>
  <towards>string</towards>
  <expectedArrival>2000-01-23T04:56:07.000Z</expectedArrival>
  <timeToLive>2000-01-23T04:56:07.000Z</timeToLive>
  <modeName>string</modeName>
</null>}]
     
     - parameter mode: (path) A mode name e.g. tube,dlr 
     - parameter count: (query) A number of arrivals to return (optional)

     - returns: RequestBuilder<[Prediction]> 
     */
    open class func modeArrivalsWithRequestBuilder(mode: String, count: Int32? = nil) -> RequestBuilder<[Prediction]> {
        var path = "/Mode/{mode}/Arrivals"
        path = path.replacingOccurrences(of: "{mode}", with: "\(mode)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "count": count?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Prediction]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Returns the service type active for a mode.              Currently only supports tube
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func modeGetActiveServiceTypes(completion: @escaping ((_ data: [ActiveServiceType]?,_ error: Error?) -> Void)) {
        modeGetActiveServiceTypesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Returns the service type active for a mode.              Currently only supports tube
     - GET /Mode/ActiveServiceTypes
     - examples: [{contentType=application/json, example=[ {
  "mode" : "aeiou",
  "serviceType" : "aeiou"
} ]}, {contentType=application/xml, example=<null>
  <mode>string</mode>
  <serviceType>string</serviceType>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "mode" : "aeiou",
  "serviceType" : "aeiou"
} ]}, {contentType=application/xml, example=<null>
  <mode>string</mode>
  <serviceType>string</serviceType>
</null>}]

     - returns: RequestBuilder<[ActiveServiceType]> 
     */
    open class func modeGetActiveServiceTypesWithRequestBuilder() -> RequestBuilder<[ActiveServiceType]> {
        let path = "/Mode/ActiveServiceTypes"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ActiveServiceType]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
