//
// VehicleAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class VehicleAPI: APIBase {
    /**
     Gets the predictions for a given list of vehicle Id's.
     
     - parameter ids: (path) A comma-separated list of vehicle ids e.g. LX58CFV,LX11AZB,LX58CFE. Max approx. 25 ids. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func vehicleGet(ids: [String], completion: @escaping ((_ data: [Prediction]?,_ error: Error?) -> Void)) {
        vehicleGetWithRequestBuilder(ids: ids).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Gets the predictions for a given list of vehicle Id's.
     - GET /Vehicle/{ids}/Arrivals
     - examples: [{contentType=application/json, example=[ {
  "modeName" : "aeiou",
  "bearing" : "aeiou",
  "timing" : {
    "read" : "2000-01-23T04:56:07.000+00:00",
    "insert" : "2000-01-23T04:56:07.000+00:00",
    "received" : "2000-01-23T04:56:07.000+00:00",
    "source" : "2000-01-23T04:56:07.000+00:00",
    "countdownServerAdjustment" : "aeiou",
    "sent" : "2000-01-23T04:56:07.000+00:00"
  },
  "lineId" : "aeiou",
  "lineName" : "aeiou",
  "destinationNaptanId" : "aeiou",
  "towards" : "aeiou",
  "currentLocation" : "aeiou",
  "timeToLive" : "2000-01-23T04:56:07.000+00:00",
  "expectedArrival" : "2000-01-23T04:56:07.000+00:00",
  "naptanId" : "aeiou",
  "destinationName" : "aeiou",
  "operationType" : 123,
  "stationName" : "aeiou",
  "id" : "aeiou",
  "vehicleId" : "aeiou",
  "platformName" : "aeiou",
  "timeToStation" : 123,
  "direction" : "aeiou",
  "timestamp" : "2000-01-23T04:56:07.000+00:00"
} ]}, {contentType=application/xml, example=<null>
  <id>string</id>
  <operationType>0</operationType>
  <vehicleId>string</vehicleId>
  <naptanId>string</naptanId>
  <stationName>string</stationName>
  <lineId>string</lineId>
  <lineName>string</lineName>
  <platformName>string</platformName>
  <direction>string</direction>
  <bearing>string</bearing>
  <destinationNaptanId>string</destinationNaptanId>
  <destinationName>string</destinationName>
  <timestamp>2000-01-23T04:56:07.000Z</timestamp>
  <timeToStation>0</timeToStation>
  <currentLocation>string</currentLocation>
  <towards>string</towards>
  <expectedArrival>2000-01-23T04:56:07.000Z</expectedArrival>
  <timeToLive>2000-01-23T04:56:07.000Z</timeToLive>
  <modeName>string</modeName>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "modeName" : "aeiou",
  "bearing" : "aeiou",
  "timing" : {
    "read" : "2000-01-23T04:56:07.000+00:00",
    "insert" : "2000-01-23T04:56:07.000+00:00",
    "received" : "2000-01-23T04:56:07.000+00:00",
    "source" : "2000-01-23T04:56:07.000+00:00",
    "countdownServerAdjustment" : "aeiou",
    "sent" : "2000-01-23T04:56:07.000+00:00"
  },
  "lineId" : "aeiou",
  "lineName" : "aeiou",
  "destinationNaptanId" : "aeiou",
  "towards" : "aeiou",
  "currentLocation" : "aeiou",
  "timeToLive" : "2000-01-23T04:56:07.000+00:00",
  "expectedArrival" : "2000-01-23T04:56:07.000+00:00",
  "naptanId" : "aeiou",
  "destinationName" : "aeiou",
  "operationType" : 123,
  "stationName" : "aeiou",
  "id" : "aeiou",
  "vehicleId" : "aeiou",
  "platformName" : "aeiou",
  "timeToStation" : 123,
  "direction" : "aeiou",
  "timestamp" : "2000-01-23T04:56:07.000+00:00"
} ]}, {contentType=application/xml, example=<null>
  <id>string</id>
  <operationType>0</operationType>
  <vehicleId>string</vehicleId>
  <naptanId>string</naptanId>
  <stationName>string</stationName>
  <lineId>string</lineId>
  <lineName>string</lineName>
  <platformName>string</platformName>
  <direction>string</direction>
  <bearing>string</bearing>
  <destinationNaptanId>string</destinationNaptanId>
  <destinationName>string</destinationName>
  <timestamp>2000-01-23T04:56:07.000Z</timestamp>
  <timeToStation>0</timeToStation>
  <currentLocation>string</currentLocation>
  <towards>string</towards>
  <expectedArrival>2000-01-23T04:56:07.000Z</expectedArrival>
  <timeToLive>2000-01-23T04:56:07.000Z</timeToLive>
  <modeName>string</modeName>
</null>}]
     
     - parameter ids: (path) A comma-separated list of vehicle ids e.g. LX58CFV,LX11AZB,LX58CFE. Max approx. 25 ids. 

     - returns: RequestBuilder<[Prediction]> 
     */
    open class func vehicleGetWithRequestBuilder(ids: [String]) -> RequestBuilder<[Prediction]> {
        var path = "/Vehicle/{ids}/Arrivals"
        path = path.replacingOccurrences(of: "{ids}", with: "\(ids)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Prediction]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
