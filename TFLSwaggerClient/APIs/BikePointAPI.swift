//
// BikePointAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class BikePointAPI: APIBase {
    /**
     Gets the bike point with the given id.
     
     - parameter id: (path) A bike point id (a list of ids can be obtained from the above BikePoint call) 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func bikePointGet(id: String, completion: @escaping ((_ data: Place?,_ error: Error?) -> Void)) {
        bikePointGetWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Gets the bike point with the given id.
     - GET /BikePoint/{id}
     - examples: [{contentType=application/json, example={
  "commonName" : "aeiou",
  "placeType" : "aeiou",
  "distance" : 1.3579000000000001069366817318950779736042022705078125,
  "children" : [ "" ],
  "childrenUrls" : [ "aeiou" ],
  "lon" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : "aeiou",
  "additionalProperties" : [ {
    "sourceSystemKey" : "aeiou",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "aeiou",
    "value" : "aeiou",
    "key" : "aeiou"
  } ],
  "url" : "aeiou",
  "lat" : 1.3579000000000001069366817318950779736042022705078125
}}, {contentType=application/xml, example=<null>
  <id>string</id>
  <url>string</url>
  <commonName>string</commonName>
  <distance>not implemented io.swagger.models.properties.DoubleProperty@e4b875bb</distance>
  <placeType>string</placeType>
  <childrenUrls>string</childrenUrls>
  <lat>not implemented io.swagger.models.properties.DoubleProperty@1372e374</lat>
  <lon>not implemented io.swagger.models.properties.DoubleProperty@8032f2d5</lon>
</null>}]
     - examples: [{contentType=application/json, example={
  "commonName" : "aeiou",
  "placeType" : "aeiou",
  "distance" : 1.3579000000000001069366817318950779736042022705078125,
  "children" : [ "" ],
  "childrenUrls" : [ "aeiou" ],
  "lon" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : "aeiou",
  "additionalProperties" : [ {
    "sourceSystemKey" : "aeiou",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "aeiou",
    "value" : "aeiou",
    "key" : "aeiou"
  } ],
  "url" : "aeiou",
  "lat" : 1.3579000000000001069366817318950779736042022705078125
}}, {contentType=application/xml, example=<null>
  <id>string</id>
  <url>string</url>
  <commonName>string</commonName>
  <distance>not implemented io.swagger.models.properties.DoubleProperty@e4b875bb</distance>
  <placeType>string</placeType>
  <childrenUrls>string</childrenUrls>
  <lat>not implemented io.swagger.models.properties.DoubleProperty@1372e374</lat>
  <lon>not implemented io.swagger.models.properties.DoubleProperty@8032f2d5</lon>
</null>}]
     
     - parameter id: (path) A bike point id (a list of ids can be obtained from the above BikePoint call) 

     - returns: RequestBuilder<Place> 
     */
    open class func bikePointGetWithRequestBuilder(id: String) -> RequestBuilder<Place> {
        var path = "/BikePoint/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Place>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets all bike point locations. The Place object has an addtionalProperties array which contains the nbBikes, nbDocks and nbSpaces              numbers which give the status of the BikePoint. A mismatch in these numbers i.e. nbDocks - (nbBikes + nbSpaces) != 0 indicates broken docks.
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func bikePointGetAll(completion: @escaping ((_ data: [Place]?,_ error: Error?) -> Void)) {
        bikePointGetAllWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Gets all bike point locations. The Place object has an addtionalProperties array which contains the nbBikes, nbDocks and nbSpaces              numbers which give the status of the BikePoint. A mismatch in these numbers i.e. nbDocks - (nbBikes + nbSpaces) != 0 indicates broken docks.
     - GET /BikePoint
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "aeiou",
  "placeType" : "aeiou",
  "distance" : 1.3579000000000001069366817318950779736042022705078125,
  "children" : [ "" ],
  "childrenUrls" : [ "aeiou" ],
  "lon" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : "aeiou",
  "additionalProperties" : [ {
    "sourceSystemKey" : "aeiou",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "aeiou",
    "value" : "aeiou",
    "key" : "aeiou"
  } ],
  "url" : "aeiou",
  "lat" : 1.3579000000000001069366817318950779736042022705078125
} ]}, {contentType=application/xml, example=<null>
  <id>string</id>
  <url>string</url>
  <commonName>string</commonName>
  <distance>not implemented io.swagger.models.properties.DoubleProperty@e4b875bb</distance>
  <placeType>string</placeType>
  <childrenUrls>string</childrenUrls>
  <lat>not implemented io.swagger.models.properties.DoubleProperty@1372e374</lat>
  <lon>not implemented io.swagger.models.properties.DoubleProperty@8032f2d5</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "aeiou",
  "placeType" : "aeiou",
  "distance" : 1.3579000000000001069366817318950779736042022705078125,
  "children" : [ "" ],
  "childrenUrls" : [ "aeiou" ],
  "lon" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : "aeiou",
  "additionalProperties" : [ {
    "sourceSystemKey" : "aeiou",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "aeiou",
    "value" : "aeiou",
    "key" : "aeiou"
  } ],
  "url" : "aeiou",
  "lat" : 1.3579000000000001069366817318950779736042022705078125
} ]}, {contentType=application/xml, example=<null>
  <id>string</id>
  <url>string</url>
  <commonName>string</commonName>
  <distance>not implemented io.swagger.models.properties.DoubleProperty@e4b875bb</distance>
  <placeType>string</placeType>
  <childrenUrls>string</childrenUrls>
  <lat>not implemented io.swagger.models.properties.DoubleProperty@1372e374</lat>
  <lon>not implemented io.swagger.models.properties.DoubleProperty@8032f2d5</lon>
</null>}]

     - returns: RequestBuilder<[Place]> 
     */
    open class func bikePointGetAllWithRequestBuilder() -> RequestBuilder<[Place]> {
        let path = "/BikePoint"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Place]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Search for bike stations by their name, a bike point's name often contains information about the name of the street              or nearby landmarks, for example. Note that the search result does not contain the PlaceProperties i.e. the status              or occupancy of the BikePoint, to get that information you should retrieve the BikePoint by its id on /BikePoint/id.
     
     - parameter query: (query) The search term e.g. \&quot;St. James\&quot; 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func bikePointSearch(query: String, completion: @escaping ((_ data: [Place]?,_ error: Error?) -> Void)) {
        bikePointSearchWithRequestBuilder(query: query).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Search for bike stations by their name, a bike point's name often contains information about the name of the street              or nearby landmarks, for example. Note that the search result does not contain the PlaceProperties i.e. the status              or occupancy of the BikePoint, to get that information you should retrieve the BikePoint by its id on /BikePoint/id.
     - GET /BikePoint/Search
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "aeiou",
  "placeType" : "aeiou",
  "distance" : 1.3579000000000001069366817318950779736042022705078125,
  "children" : [ "" ],
  "childrenUrls" : [ "aeiou" ],
  "lon" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : "aeiou",
  "additionalProperties" : [ {
    "sourceSystemKey" : "aeiou",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "aeiou",
    "value" : "aeiou",
    "key" : "aeiou"
  } ],
  "url" : "aeiou",
  "lat" : 1.3579000000000001069366817318950779736042022705078125
} ]}, {contentType=application/xml, example=<null>
  <id>string</id>
  <url>string</url>
  <commonName>string</commonName>
  <distance>not implemented io.swagger.models.properties.DoubleProperty@e4b875bb</distance>
  <placeType>string</placeType>
  <childrenUrls>string</childrenUrls>
  <lat>not implemented io.swagger.models.properties.DoubleProperty@1372e374</lat>
  <lon>not implemented io.swagger.models.properties.DoubleProperty@8032f2d5</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "aeiou",
  "placeType" : "aeiou",
  "distance" : 1.3579000000000001069366817318950779736042022705078125,
  "children" : [ "" ],
  "childrenUrls" : [ "aeiou" ],
  "lon" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : "aeiou",
  "additionalProperties" : [ {
    "sourceSystemKey" : "aeiou",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "aeiou",
    "value" : "aeiou",
    "key" : "aeiou"
  } ],
  "url" : "aeiou",
  "lat" : 1.3579000000000001069366817318950779736042022705078125
} ]}, {contentType=application/xml, example=<null>
  <id>string</id>
  <url>string</url>
  <commonName>string</commonName>
  <distance>not implemented io.swagger.models.properties.DoubleProperty@e4b875bb</distance>
  <placeType>string</placeType>
  <childrenUrls>string</childrenUrls>
  <lat>not implemented io.swagger.models.properties.DoubleProperty@1372e374</lat>
  <lon>not implemented io.swagger.models.properties.DoubleProperty@8032f2d5</lon>
</null>}]
     
     - parameter query: (query) The search term e.g. \&quot;St. James\&quot; 

     - returns: RequestBuilder<[Place]> 
     */
    open class func bikePointSearchWithRequestBuilder(query: String) -> RequestBuilder<[Place]> {
        let path = "/BikePoint/Search"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "query": query
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Place]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
