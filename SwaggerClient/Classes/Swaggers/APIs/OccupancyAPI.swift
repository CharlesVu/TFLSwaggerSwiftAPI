//
// OccupancyAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class OccupancyAPI {
    /**
     Gets the occupancy for a car park with a given id
     
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func occupancyGet(_id: String, completion: @escaping ((_ data: TflApiPresentationEntitiesCarParkOccupancy?,_ error: Error?) -> Void)) {
        occupancyGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the occupancy for a car park with a given id
     - GET /Occupancy/CarPark/{id}
     - examples: [{contentType=application/json, example={
  "carParkDetailsUrl" : "carParkDetailsUrl",
  "bays" : [ {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  }, {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  } ],
  "name" : "name",
  "id" : "id"
}}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <name>aeiou</name>
  <carParkDetailsUrl>aeiou</carParkDetailsUrl>
</null>}]
     - examples: [{contentType=application/json, example={
  "carParkDetailsUrl" : "carParkDetailsUrl",
  "bays" : [ {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  }, {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  } ],
  "name" : "name",
  "id" : "id"
}}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <name>aeiou</name>
  <carParkDetailsUrl>aeiou</carParkDetailsUrl>
</null>}]
     
     - parameter _id: (path)  

     - returns: RequestBuilder<TflApiPresentationEntitiesCarParkOccupancy> 
     */
    open class func occupancyGetWithRequestBuilder(_id: String) -> RequestBuilder<TflApiPresentationEntitiesCarParkOccupancy> {
        var path = "/Occupancy/CarPark/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TflApiPresentationEntitiesCarParkOccupancy>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets the occupancy for all charge connectors
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func occupancyGetAllChargeConnectorStatus(completion: @escaping ((_ data: [TflApiPresentationEntitiesChargeConnectorOccupancy]?,_ error: Error?) -> Void)) {
        occupancyGetAllChargeConnectorStatusWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the occupancy for all charge connectors
     - GET /Occupancy/ChargeConnector
     - examples: [{contentType=application/json, example=[ {
  "id" : 0,
  "sourceSystemPlaceId" : "sourceSystemPlaceId",
  "status" : "status"
}, {
  "id" : 0,
  "sourceSystemPlaceId" : "sourceSystemPlaceId",
  "status" : "status"
} ]}, {contentType=application/xml, example=<null>
  <id>123</id>
  <sourceSystemPlaceId>aeiou</sourceSystemPlaceId>
  <status>aeiou</status>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "id" : 0,
  "sourceSystemPlaceId" : "sourceSystemPlaceId",
  "status" : "status"
}, {
  "id" : 0,
  "sourceSystemPlaceId" : "sourceSystemPlaceId",
  "status" : "status"
} ]}, {contentType=application/xml, example=<null>
  <id>123</id>
  <sourceSystemPlaceId>aeiou</sourceSystemPlaceId>
  <status>aeiou</status>
</null>}]

     - returns: RequestBuilder<[TflApiPresentationEntitiesChargeConnectorOccupancy]> 
     */
    open class func occupancyGetAllChargeConnectorStatusWithRequestBuilder() -> RequestBuilder<[TflApiPresentationEntitiesChargeConnectorOccupancy]> {
        let path = "/Occupancy/ChargeConnector"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesChargeConnectorOccupancy]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the occupancy for bike points.
     
     - parameter ids: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func occupancyGetBikePointsOccupancies(ids: [String], completion: @escaping ((_ data: [TflApiPresentationEntitiesBikePointOccupancy]?,_ error: Error?) -> Void)) {
        occupancyGetBikePointsOccupanciesWithRequestBuilder(ids: ids).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get the occupancy for bike points.
     - GET /Occupancy/BikePoints/{ids}
     - examples: [{contentType=application/json, example=[ {
  "name" : "name",
  "totalDocks" : 1,
  "id" : "id",
  "emptyDocks" : 6,
  "bikesCount" : 0
}, {
  "name" : "name",
  "totalDocks" : 1,
  "id" : "id",
  "emptyDocks" : 6,
  "bikesCount" : 0
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <name>aeiou</name>
  <bikesCount>123</bikesCount>
  <emptyDocks>123</emptyDocks>
  <totalDocks>123</totalDocks>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "name" : "name",
  "totalDocks" : 1,
  "id" : "id",
  "emptyDocks" : 6,
  "bikesCount" : 0
}, {
  "name" : "name",
  "totalDocks" : 1,
  "id" : "id",
  "emptyDocks" : 6,
  "bikesCount" : 0
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <name>aeiou</name>
  <bikesCount>123</bikesCount>
  <emptyDocks>123</emptyDocks>
  <totalDocks>123</totalDocks>
</null>}]
     
     - parameter ids: (path)  

     - returns: RequestBuilder<[TflApiPresentationEntitiesBikePointOccupancy]> 
     */
    open class func occupancyGetBikePointsOccupanciesWithRequestBuilder(ids: [String]) -> RequestBuilder<[TflApiPresentationEntitiesBikePointOccupancy]> {
        var path = "/Occupancy/BikePoints/{ids}"
        let idsPreEscape = "\(ids)"
        let idsPostEscape = idsPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ids}", with: idsPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesBikePointOccupancy]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets the occupancy for a charge connectors with a given id (sourceSystemPlaceId)
     
     - parameter ids: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func occupancyGetChargeConnectorStatus(ids: [String], completion: @escaping ((_ data: [TflApiPresentationEntitiesChargeConnectorOccupancy]?,_ error: Error?) -> Void)) {
        occupancyGetChargeConnectorStatusWithRequestBuilder(ids: ids).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the occupancy for a charge connectors with a given id (sourceSystemPlaceId)
     - GET /Occupancy/ChargeConnector/{ids}
     - examples: [{contentType=application/json, example=[ {
  "id" : 0,
  "sourceSystemPlaceId" : "sourceSystemPlaceId",
  "status" : "status"
}, {
  "id" : 0,
  "sourceSystemPlaceId" : "sourceSystemPlaceId",
  "status" : "status"
} ]}, {contentType=application/xml, example=<null>
  <id>123</id>
  <sourceSystemPlaceId>aeiou</sourceSystemPlaceId>
  <status>aeiou</status>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "id" : 0,
  "sourceSystemPlaceId" : "sourceSystemPlaceId",
  "status" : "status"
}, {
  "id" : 0,
  "sourceSystemPlaceId" : "sourceSystemPlaceId",
  "status" : "status"
} ]}, {contentType=application/xml, example=<null>
  <id>123</id>
  <sourceSystemPlaceId>aeiou</sourceSystemPlaceId>
  <status>aeiou</status>
</null>}]
     
     - parameter ids: (path)  

     - returns: RequestBuilder<[TflApiPresentationEntitiesChargeConnectorOccupancy]> 
     */
    open class func occupancyGetChargeConnectorStatusWithRequestBuilder(ids: [String]) -> RequestBuilder<[TflApiPresentationEntitiesChargeConnectorOccupancy]> {
        var path = "/Occupancy/ChargeConnector/{ids}"
        let idsPreEscape = "\(ids)"
        let idsPostEscape = idsPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ids}", with: idsPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesChargeConnectorOccupancy]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets the occupancy for all car parks that have occupancy data
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func occupancyGet_0(completion: @escaping ((_ data: [TflApiPresentationEntitiesCarParkOccupancy]?,_ error: Error?) -> Void)) {
        occupancyGet_0WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the occupancy for all car parks that have occupancy data
     - GET /Occupancy/CarPark
     - examples: [{contentType=application/json, example=[ {
  "carParkDetailsUrl" : "carParkDetailsUrl",
  "bays" : [ {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  }, {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  } ],
  "name" : "name",
  "id" : "id"
}, {
  "carParkDetailsUrl" : "carParkDetailsUrl",
  "bays" : [ {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  }, {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  } ],
  "name" : "name",
  "id" : "id"
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <name>aeiou</name>
  <carParkDetailsUrl>aeiou</carParkDetailsUrl>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "carParkDetailsUrl" : "carParkDetailsUrl",
  "bays" : [ {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  }, {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  } ],
  "name" : "name",
  "id" : "id"
}, {
  "carParkDetailsUrl" : "carParkDetailsUrl",
  "bays" : [ {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  }, {
    "bayCount" : 0,
    "free" : 6,
    "bayType" : "bayType",
    "occupied" : 1
  } ],
  "name" : "name",
  "id" : "id"
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <name>aeiou</name>
  <carParkDetailsUrl>aeiou</carParkDetailsUrl>
</null>}]

     - returns: RequestBuilder<[TflApiPresentationEntitiesCarParkOccupancy]> 
     */
    open class func occupancyGet_0WithRequestBuilder() -> RequestBuilder<[TflApiPresentationEntitiesCarParkOccupancy]> {
        let path = "/Occupancy/CarPark"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesCarParkOccupancy]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
