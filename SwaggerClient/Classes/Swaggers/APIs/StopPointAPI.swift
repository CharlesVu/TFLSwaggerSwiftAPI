//
// StopPointAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class StopPointAPI {
    /**
     Gets the list of arrival predictions for the given stop point id
     
     - parameter _id: (path) A StopPoint id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointArrivals(_id: String, completion: @escaping ((_ data: [TflApiPresentationEntitiesPrediction]?,_ error: Error?) -> Void)) {
        stopPointArrivalsWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the list of arrival predictions for the given stop point id
     - GET /StopPoint/{id}/Arrivals
     - examples: [{contentType=application/json, example=[ {
  "modeName" : "modeName",
  "bearing" : "bearing",
  "timing" : {
    "read" : "2000-01-23T04:56:07.000+00:00",
    "insert" : "2000-01-23T04:56:07.000+00:00",
    "received" : "2000-01-23T04:56:07.000+00:00",
    "source" : "2000-01-23T04:56:07.000+00:00",
    "countdownServerAdjustment" : "countdownServerAdjustment",
    "sent" : "2000-01-23T04:56:07.000+00:00"
  },
  "lineId" : "lineId",
  "lineName" : "lineName",
  "destinationNaptanId" : "destinationNaptanId",
  "towards" : "towards",
  "currentLocation" : "currentLocation",
  "timeToLive" : "2000-01-23T04:56:07.000+00:00",
  "expectedArrival" : "2000-01-23T04:56:07.000+00:00",
  "naptanId" : "naptanId",
  "destinationName" : "destinationName",
  "operationType" : 0,
  "stationName" : "stationName",
  "id" : "id",
  "vehicleId" : "vehicleId",
  "platformName" : "platformName",
  "timeToStation" : 6,
  "direction" : "direction",
  "timestamp" : "2000-01-23T04:56:07.000+00:00"
}, {
  "modeName" : "modeName",
  "bearing" : "bearing",
  "timing" : {
    "read" : "2000-01-23T04:56:07.000+00:00",
    "insert" : "2000-01-23T04:56:07.000+00:00",
    "received" : "2000-01-23T04:56:07.000+00:00",
    "source" : "2000-01-23T04:56:07.000+00:00",
    "countdownServerAdjustment" : "countdownServerAdjustment",
    "sent" : "2000-01-23T04:56:07.000+00:00"
  },
  "lineId" : "lineId",
  "lineName" : "lineName",
  "destinationNaptanId" : "destinationNaptanId",
  "towards" : "towards",
  "currentLocation" : "currentLocation",
  "timeToLive" : "2000-01-23T04:56:07.000+00:00",
  "expectedArrival" : "2000-01-23T04:56:07.000+00:00",
  "naptanId" : "naptanId",
  "destinationName" : "destinationName",
  "operationType" : 0,
  "stationName" : "stationName",
  "id" : "id",
  "vehicleId" : "vehicleId",
  "platformName" : "platformName",
  "timeToStation" : 6,
  "direction" : "direction",
  "timestamp" : "2000-01-23T04:56:07.000+00:00"
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <operationType>123</operationType>
  <vehicleId>aeiou</vehicleId>
  <naptanId>aeiou</naptanId>
  <stationName>aeiou</stationName>
  <lineId>aeiou</lineId>
  <lineName>aeiou</lineName>
  <platformName>aeiou</platformName>
  <direction>aeiou</direction>
  <bearing>aeiou</bearing>
  <destinationNaptanId>aeiou</destinationNaptanId>
  <destinationName>aeiou</destinationName>
  <timestamp>2000-01-23T04:56:07.000Z</timestamp>
  <timeToStation>123</timeToStation>
  <currentLocation>aeiou</currentLocation>
  <towards>aeiou</towards>
  <expectedArrival>2000-01-23T04:56:07.000Z</expectedArrival>
  <timeToLive>2000-01-23T04:56:07.000Z</timeToLive>
  <modeName>aeiou</modeName>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "modeName" : "modeName",
  "bearing" : "bearing",
  "timing" : {
    "read" : "2000-01-23T04:56:07.000+00:00",
    "insert" : "2000-01-23T04:56:07.000+00:00",
    "received" : "2000-01-23T04:56:07.000+00:00",
    "source" : "2000-01-23T04:56:07.000+00:00",
    "countdownServerAdjustment" : "countdownServerAdjustment",
    "sent" : "2000-01-23T04:56:07.000+00:00"
  },
  "lineId" : "lineId",
  "lineName" : "lineName",
  "destinationNaptanId" : "destinationNaptanId",
  "towards" : "towards",
  "currentLocation" : "currentLocation",
  "timeToLive" : "2000-01-23T04:56:07.000+00:00",
  "expectedArrival" : "2000-01-23T04:56:07.000+00:00",
  "naptanId" : "naptanId",
  "destinationName" : "destinationName",
  "operationType" : 0,
  "stationName" : "stationName",
  "id" : "id",
  "vehicleId" : "vehicleId",
  "platformName" : "platformName",
  "timeToStation" : 6,
  "direction" : "direction",
  "timestamp" : "2000-01-23T04:56:07.000+00:00"
}, {
  "modeName" : "modeName",
  "bearing" : "bearing",
  "timing" : {
    "read" : "2000-01-23T04:56:07.000+00:00",
    "insert" : "2000-01-23T04:56:07.000+00:00",
    "received" : "2000-01-23T04:56:07.000+00:00",
    "source" : "2000-01-23T04:56:07.000+00:00",
    "countdownServerAdjustment" : "countdownServerAdjustment",
    "sent" : "2000-01-23T04:56:07.000+00:00"
  },
  "lineId" : "lineId",
  "lineName" : "lineName",
  "destinationNaptanId" : "destinationNaptanId",
  "towards" : "towards",
  "currentLocation" : "currentLocation",
  "timeToLive" : "2000-01-23T04:56:07.000+00:00",
  "expectedArrival" : "2000-01-23T04:56:07.000+00:00",
  "naptanId" : "naptanId",
  "destinationName" : "destinationName",
  "operationType" : 0,
  "stationName" : "stationName",
  "id" : "id",
  "vehicleId" : "vehicleId",
  "platformName" : "platformName",
  "timeToStation" : 6,
  "direction" : "direction",
  "timestamp" : "2000-01-23T04:56:07.000+00:00"
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <operationType>123</operationType>
  <vehicleId>aeiou</vehicleId>
  <naptanId>aeiou</naptanId>
  <stationName>aeiou</stationName>
  <lineId>aeiou</lineId>
  <lineName>aeiou</lineName>
  <platformName>aeiou</platformName>
  <direction>aeiou</direction>
  <bearing>aeiou</bearing>
  <destinationNaptanId>aeiou</destinationNaptanId>
  <destinationName>aeiou</destinationName>
  <timestamp>2000-01-23T04:56:07.000Z</timestamp>
  <timeToStation>123</timeToStation>
  <currentLocation>aeiou</currentLocation>
  <towards>aeiou</towards>
  <expectedArrival>2000-01-23T04:56:07.000Z</expectedArrival>
  <timeToLive>2000-01-23T04:56:07.000Z</timeToLive>
  <modeName>aeiou</modeName>
</null>}]
     
     - parameter _id: (path) A StopPoint id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) 

     - returns: RequestBuilder<[TflApiPresentationEntitiesPrediction]> 
     */
    open class func stopPointArrivalsWithRequestBuilder(_id: String) -> RequestBuilder<[TflApiPresentationEntitiesPrediction]> {
        var path = "/StopPoint/{id}/Arrivals"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesPrediction]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter direction
     */
    public enum Direction_stopPointCrowding: String { 
        case inbound = "inbound"
        case outbound = "outbound"
        case all = "all"
    }

    /**
     Gets all the Crowding data (static) for the StopPointId, plus crowding data for a given line and optionally a particular direction.
     
     - parameter _id: (path) The Naptan id of the stop 
     - parameter line: (path) A particular line e.g. victoria, circle, northern etc. 
     - parameter direction: (query) The direction of travel. Can be inbound or outbound. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointCrowding(_id: String, line: String, direction: Direction_stopPointCrowding, completion: @escaping ((_ data: [TflApiPresentationEntitiesStopPoint]?,_ error: Error?) -> Void)) {
        stopPointCrowdingWithRequestBuilder(_id: _id, line: line, direction: direction).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets all the Crowding data (static) for the StopPointId, plus crowding data for a given line and optionally a particular direction.
     - GET /StopPoint/{id}/Crowding/{line}
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     
     - parameter _id: (path) The Naptan id of the stop 
     - parameter line: (path) A particular line e.g. victoria, circle, northern etc. 
     - parameter direction: (query) The direction of travel. Can be inbound or outbound. 

     - returns: RequestBuilder<[TflApiPresentationEntitiesStopPoint]> 
     */
    open class func stopPointCrowdingWithRequestBuilder(_id: String, line: String, direction: Direction_stopPointCrowding) -> RequestBuilder<[TflApiPresentationEntitiesStopPoint]> {
        var path = "/StopPoint/{id}/Crowding/{line}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let linePreEscape = "\(line)"
        let linePostEscape = linePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{line}", with: linePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "direction": direction.rawValue
        ])

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesStopPoint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Returns the canonical direction, \"inbound\" or \"outbound\", for a given pair of stop point Ids in the direction from -&gt; to.
     
     - parameter _id: (path) Originating stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) 
     - parameter toStopPointId: (path) Destination stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) 
     - parameter lineId: (query) Optional line id filter e.g. victoria (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointDirection(_id: String, toStopPointId: String, lineId: String? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        stopPointDirectionWithRequestBuilder(_id: _id, toStopPointId: toStopPointId, lineId: lineId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the canonical direction, \"inbound\" or \"outbound\", for a given pair of stop point Ids in the direction from -&gt; to.
     - GET /StopPoint/{id}/DirectionTo/{toStopPointId}
     - examples: [{contentType=application/json, example=""}, {contentType=application/xml, example=aeiou}]
     - examples: [{contentType=application/json, example=""}, {contentType=application/xml, example=aeiou}]
     
     - parameter _id: (path) Originating stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) 
     - parameter toStopPointId: (path) Destination stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) 
     - parameter lineId: (query) Optional line id filter e.g. victoria (optional)

     - returns: RequestBuilder<String> 
     */
    open class func stopPointDirectionWithRequestBuilder(_id: String, toStopPointId: String, lineId: String? = nil) -> RequestBuilder<String> {
        var path = "/StopPoint/{id}/DirectionTo/{toStopPointId}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let toStopPointIdPreEscape = "\(toStopPointId)"
        let toStopPointIdPostEscape = toStopPointIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{toStopPointId}", with: toStopPointIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "lineId": lineId
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets all disruptions for the specified StopPointId, plus disruptions for any child Naptan records it may have.
     
     - parameter ids: (path) A comma-seperated list of stop point ids. Max. approx. 20 ids.              You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name. 
     - parameter getFamily: (query) Specify true to return disruptions for entire family, or false to return disruptions for just this stop point. Defaults to false. (optional)
     - parameter includeRouteBlockedStops: (query)  (optional)
     - parameter flattenResponse: (query) Specify true to associate all disruptions with parent stop point. (Only applicable when getFamily is true). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointDisruption(ids: [String], getFamily: Bool? = nil, includeRouteBlockedStops: Bool? = nil, flattenResponse: Bool? = nil, completion: @escaping ((_ data: [TflApiPresentationEntitiesDisruptedPoint]?,_ error: Error?) -> Void)) {
        stopPointDisruptionWithRequestBuilder(ids: ids, getFamily: getFamily, includeRouteBlockedStops: includeRouteBlockedStops, flattenResponse: flattenResponse).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets all disruptions for the specified StopPointId, plus disruptions for any child Naptan records it may have.
     - GET /StopPoint/{ids}/Disruption
     - examples: [{contentType=application/json, example=[ {
  "fromDate" : "2000-01-23T04:56:07.000+00:00",
  "mode" : "mode",
  "commonName" : "commonName",
  "additionalInformation" : "additionalInformation",
  "appearance" : "appearance",
  "toDate" : "2000-01-23T04:56:07.000+00:00",
  "description" : "description",
  "atcoCode" : "atcoCode",
  "type" : "type",
  "stationAtcoCode" : "stationAtcoCode"
}, {
  "fromDate" : "2000-01-23T04:56:07.000+00:00",
  "mode" : "mode",
  "commonName" : "commonName",
  "additionalInformation" : "additionalInformation",
  "appearance" : "appearance",
  "toDate" : "2000-01-23T04:56:07.000+00:00",
  "description" : "description",
  "atcoCode" : "atcoCode",
  "type" : "type",
  "stationAtcoCode" : "stationAtcoCode"
} ]}, {contentType=application/xml, example=<null>
  <atcoCode>aeiou</atcoCode>
  <fromDate>2000-01-23T04:56:07.000Z</fromDate>
  <toDate>2000-01-23T04:56:07.000Z</toDate>
  <description>aeiou</description>
  <commonName>aeiou</commonName>
  <type>aeiou</type>
  <mode>aeiou</mode>
  <stationAtcoCode>aeiou</stationAtcoCode>
  <appearance>aeiou</appearance>
  <additionalInformation>aeiou</additionalInformation>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "fromDate" : "2000-01-23T04:56:07.000+00:00",
  "mode" : "mode",
  "commonName" : "commonName",
  "additionalInformation" : "additionalInformation",
  "appearance" : "appearance",
  "toDate" : "2000-01-23T04:56:07.000+00:00",
  "description" : "description",
  "atcoCode" : "atcoCode",
  "type" : "type",
  "stationAtcoCode" : "stationAtcoCode"
}, {
  "fromDate" : "2000-01-23T04:56:07.000+00:00",
  "mode" : "mode",
  "commonName" : "commonName",
  "additionalInformation" : "additionalInformation",
  "appearance" : "appearance",
  "toDate" : "2000-01-23T04:56:07.000+00:00",
  "description" : "description",
  "atcoCode" : "atcoCode",
  "type" : "type",
  "stationAtcoCode" : "stationAtcoCode"
} ]}, {contentType=application/xml, example=<null>
  <atcoCode>aeiou</atcoCode>
  <fromDate>2000-01-23T04:56:07.000Z</fromDate>
  <toDate>2000-01-23T04:56:07.000Z</toDate>
  <description>aeiou</description>
  <commonName>aeiou</commonName>
  <type>aeiou</type>
  <mode>aeiou</mode>
  <stationAtcoCode>aeiou</stationAtcoCode>
  <appearance>aeiou</appearance>
  <additionalInformation>aeiou</additionalInformation>
</null>}]
     
     - parameter ids: (path) A comma-seperated list of stop point ids. Max. approx. 20 ids.              You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name. 
     - parameter getFamily: (query) Specify true to return disruptions for entire family, or false to return disruptions for just this stop point. Defaults to false. (optional)
     - parameter includeRouteBlockedStops: (query)  (optional)
     - parameter flattenResponse: (query) Specify true to associate all disruptions with parent stop point. (Only applicable when getFamily is true). (optional)

     - returns: RequestBuilder<[TflApiPresentationEntitiesDisruptedPoint]> 
     */
    open class func stopPointDisruptionWithRequestBuilder(ids: [String], getFamily: Bool? = nil, includeRouteBlockedStops: Bool? = nil, flattenResponse: Bool? = nil) -> RequestBuilder<[TflApiPresentationEntitiesDisruptedPoint]> {
        var path = "/StopPoint/{ids}/Disruption"
        let idsPreEscape = "\(ids)"
        let idsPostEscape = idsPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ids}", with: idsPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "getFamily": getFamily, 
            "includeRouteBlockedStops": includeRouteBlockedStops, 
            "flattenResponse": flattenResponse
        ])

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesDisruptedPoint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets a distinct list of disrupted stop points for the given modes
     
     - parameter modes: (path) A comma-seperated list of modes e.g. tube,dlr 
     - parameter includeRouteBlockedStops: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointDisruptionByMode(modes: [String], includeRouteBlockedStops: Bool? = nil, completion: @escaping ((_ data: [TflApiPresentationEntitiesDisruptedPoint]?,_ error: Error?) -> Void)) {
        stopPointDisruptionByModeWithRequestBuilder(modes: modes, includeRouteBlockedStops: includeRouteBlockedStops).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a distinct list of disrupted stop points for the given modes
     - GET /StopPoint/Mode/{modes}/Disruption
     - examples: [{contentType=application/json, example=[ {
  "fromDate" : "2000-01-23T04:56:07.000+00:00",
  "mode" : "mode",
  "commonName" : "commonName",
  "additionalInformation" : "additionalInformation",
  "appearance" : "appearance",
  "toDate" : "2000-01-23T04:56:07.000+00:00",
  "description" : "description",
  "atcoCode" : "atcoCode",
  "type" : "type",
  "stationAtcoCode" : "stationAtcoCode"
}, {
  "fromDate" : "2000-01-23T04:56:07.000+00:00",
  "mode" : "mode",
  "commonName" : "commonName",
  "additionalInformation" : "additionalInformation",
  "appearance" : "appearance",
  "toDate" : "2000-01-23T04:56:07.000+00:00",
  "description" : "description",
  "atcoCode" : "atcoCode",
  "type" : "type",
  "stationAtcoCode" : "stationAtcoCode"
} ]}, {contentType=application/xml, example=<null>
  <atcoCode>aeiou</atcoCode>
  <fromDate>2000-01-23T04:56:07.000Z</fromDate>
  <toDate>2000-01-23T04:56:07.000Z</toDate>
  <description>aeiou</description>
  <commonName>aeiou</commonName>
  <type>aeiou</type>
  <mode>aeiou</mode>
  <stationAtcoCode>aeiou</stationAtcoCode>
  <appearance>aeiou</appearance>
  <additionalInformation>aeiou</additionalInformation>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "fromDate" : "2000-01-23T04:56:07.000+00:00",
  "mode" : "mode",
  "commonName" : "commonName",
  "additionalInformation" : "additionalInformation",
  "appearance" : "appearance",
  "toDate" : "2000-01-23T04:56:07.000+00:00",
  "description" : "description",
  "atcoCode" : "atcoCode",
  "type" : "type",
  "stationAtcoCode" : "stationAtcoCode"
}, {
  "fromDate" : "2000-01-23T04:56:07.000+00:00",
  "mode" : "mode",
  "commonName" : "commonName",
  "additionalInformation" : "additionalInformation",
  "appearance" : "appearance",
  "toDate" : "2000-01-23T04:56:07.000+00:00",
  "description" : "description",
  "atcoCode" : "atcoCode",
  "type" : "type",
  "stationAtcoCode" : "stationAtcoCode"
} ]}, {contentType=application/xml, example=<null>
  <atcoCode>aeiou</atcoCode>
  <fromDate>2000-01-23T04:56:07.000Z</fromDate>
  <toDate>2000-01-23T04:56:07.000Z</toDate>
  <description>aeiou</description>
  <commonName>aeiou</commonName>
  <type>aeiou</type>
  <mode>aeiou</mode>
  <stationAtcoCode>aeiou</stationAtcoCode>
  <appearance>aeiou</appearance>
  <additionalInformation>aeiou</additionalInformation>
</null>}]
     
     - parameter modes: (path) A comma-seperated list of modes e.g. tube,dlr 
     - parameter includeRouteBlockedStops: (query)  (optional)

     - returns: RequestBuilder<[TflApiPresentationEntitiesDisruptedPoint]> 
     */
    open class func stopPointDisruptionByModeWithRequestBuilder(modes: [String], includeRouteBlockedStops: Bool? = nil) -> RequestBuilder<[TflApiPresentationEntitiesDisruptedPoint]> {
        var path = "/StopPoint/Mode/{modes}/Disruption"
        let modesPreEscape = "\(modes)"
        let modesPostEscape = modesPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{modes}", with: modesPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "includeRouteBlockedStops": includeRouteBlockedStops
        ])

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesDisruptedPoint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets a list of StopPoints corresponding to the given list of stop ids.
     
     - parameter ids: (path) A comma-separated list of stop point ids (station naptan code e.g. 940GZZLUASL). Max. approx. 20 ids.              You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name. 
     - parameter includeCrowdingData: (query) Include the crowding data (static). To Filter further use: /StopPoint/{ids}/Crowding/{line} (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGet(ids: [String], includeCrowdingData: Bool? = nil, completion: @escaping ((_ data: [TflApiPresentationEntitiesStopPoint]?,_ error: Error?) -> Void)) {
        stopPointGetWithRequestBuilder(ids: ids, includeCrowdingData: includeCrowdingData).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of StopPoints corresponding to the given list of stop ids.
     - GET /StopPoint/{ids}
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     
     - parameter ids: (path) A comma-separated list of stop point ids (station naptan code e.g. 940GZZLUASL). Max. approx. 20 ids.              You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name. 
     - parameter includeCrowdingData: (query) Include the crowding data (static). To Filter further use: /StopPoint/{ids}/Crowding/{line} (optional)

     - returns: RequestBuilder<[TflApiPresentationEntitiesStopPoint]> 
     */
    open class func stopPointGetWithRequestBuilder(ids: [String], includeCrowdingData: Bool? = nil) -> RequestBuilder<[TflApiPresentationEntitiesStopPoint]> {
        var path = "/StopPoint/{ids}"
        let idsPreEscape = "\(ids)"
        let idsPostEscape = idsPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ids}", with: idsPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "includeCrowdingData": includeCrowdingData
        ])

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesStopPoint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets a list of StopPoints within {radius} by the specified criteria
     
     - parameter stopTypes: (query) a list of stopTypes that should be returned (a list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint) 
     - parameter locationLat: (query)  
     - parameter locationLon: (query)  
     - parameter radius: (query) the radius of the bounding circle in metres (default : 200) (optional)
     - parameter useStopPointHierarchy: (query) Re-arrange the output into a parent/child hierarchy (optional)
     - parameter modes: (query) the list of modes to search (comma separated mode names e.g. tube,dlr) (optional)
     - parameter categories: (query) an optional list of comma separated property categories to return in the StopPoint&#39;s property bag. If null or empty, all categories of property are returned. Pass the keyword \&quot;none\&quot; to return no properties (a valid list of categories can be obtained from the /StopPoint/Meta/categories endpoint) (optional)
     - parameter returnLines: (query) true to return the lines that each stop point serves as a nested resource (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGetByGeoPoint(stopTypes: [String], locationLat: Double, locationLon: Double, radius: Int? = nil, useStopPointHierarchy: Bool? = nil, modes: [String]? = nil, categories: [String]? = nil, returnLines: Bool? = nil, completion: @escaping ((_ data: TflApiPresentationEntitiesStopPointsResponse?,_ error: Error?) -> Void)) {
        stopPointGetByGeoPointWithRequestBuilder(stopTypes: stopTypes, locationLat: locationLat, locationLon: locationLon, radius: radius, useStopPointHierarchy: useStopPointHierarchy, modes: modes, categories: categories, returnLines: returnLines).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of StopPoints within {radius} by the specified criteria
     - GET /StopPoint
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "centrePoint" : [ 0.8008281904610115, 0.8008281904610115 ],
  "stopPoints" : [ {
    "indicator" : "indicator",
    "commonName" : "commonName",
    "modes" : [ "modes", "modes" ],
    "distance" : 9.369310271410669,
    "smsCode" : "smsCode",
    "lon" : 8.762042012749001,
    "children" : [ {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    }, {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    } ],
    "hubNaptanCode" : "hubNaptanCode",
    "stopLetter" : "stopLetter",
    "id" : "id",
    "platformName" : "platformName",
    "lines" : [ {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    }, {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    } ],
    "lat" : 6.683562403749608,
    "lineModeGroups" : [ {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    }, {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    } ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "stationNaptan" : "stationNaptan",
    "fullName" : "fullName",
    "stopType" : "stopType",
    "naptanMode" : "naptanMode",
    "url" : "url",
    "placeType" : "placeType",
    "naptanId" : "naptanId",
    "icsCode" : "icsCode",
    "lineGroup" : [ {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    }, {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    } ],
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "accessibilitySummary" : "accessibilitySummary",
    "status" : true
  }, {
    "indicator" : "indicator",
    "commonName" : "commonName",
    "modes" : [ "modes", "modes" ],
    "distance" : 9.369310271410669,
    "smsCode" : "smsCode",
    "lon" : 8.762042012749001,
    "children" : [ {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    }, {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    } ],
    "hubNaptanCode" : "hubNaptanCode",
    "stopLetter" : "stopLetter",
    "id" : "id",
    "platformName" : "platformName",
    "lines" : [ {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    }, {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    } ],
    "lat" : 6.683562403749608,
    "lineModeGroups" : [ {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    }, {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    } ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "stationNaptan" : "stationNaptan",
    "fullName" : "fullName",
    "stopType" : "stopType",
    "naptanMode" : "naptanMode",
    "url" : "url",
    "placeType" : "placeType",
    "naptanId" : "naptanId",
    "icsCode" : "icsCode",
    "lineGroup" : [ {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    }, {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    } ],
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "accessibilitySummary" : "accessibilitySummary",
    "status" : true
  } ],
  "pageSize" : 6,
  "page" : 5
}}, {contentType=application/xml, example=<null>
  <centrePoint>3.149</centrePoint>
  <pageSize>123</pageSize>
  <total>123</total>
  <page>123</page>
</null>}]
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "centrePoint" : [ 0.8008281904610115, 0.8008281904610115 ],
  "stopPoints" : [ {
    "indicator" : "indicator",
    "commonName" : "commonName",
    "modes" : [ "modes", "modes" ],
    "distance" : 9.369310271410669,
    "smsCode" : "smsCode",
    "lon" : 8.762042012749001,
    "children" : [ {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    }, {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    } ],
    "hubNaptanCode" : "hubNaptanCode",
    "stopLetter" : "stopLetter",
    "id" : "id",
    "platformName" : "platformName",
    "lines" : [ {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    }, {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    } ],
    "lat" : 6.683562403749608,
    "lineModeGroups" : [ {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    }, {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    } ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "stationNaptan" : "stationNaptan",
    "fullName" : "fullName",
    "stopType" : "stopType",
    "naptanMode" : "naptanMode",
    "url" : "url",
    "placeType" : "placeType",
    "naptanId" : "naptanId",
    "icsCode" : "icsCode",
    "lineGroup" : [ {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    }, {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    } ],
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "accessibilitySummary" : "accessibilitySummary",
    "status" : true
  }, {
    "indicator" : "indicator",
    "commonName" : "commonName",
    "modes" : [ "modes", "modes" ],
    "distance" : 9.369310271410669,
    "smsCode" : "smsCode",
    "lon" : 8.762042012749001,
    "children" : [ {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    }, {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    } ],
    "hubNaptanCode" : "hubNaptanCode",
    "stopLetter" : "stopLetter",
    "id" : "id",
    "platformName" : "platformName",
    "lines" : [ {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    }, {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    } ],
    "lat" : 6.683562403749608,
    "lineModeGroups" : [ {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    }, {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    } ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "stationNaptan" : "stationNaptan",
    "fullName" : "fullName",
    "stopType" : "stopType",
    "naptanMode" : "naptanMode",
    "url" : "url",
    "placeType" : "placeType",
    "naptanId" : "naptanId",
    "icsCode" : "icsCode",
    "lineGroup" : [ {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    }, {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    } ],
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "accessibilitySummary" : "accessibilitySummary",
    "status" : true
  } ],
  "pageSize" : 6,
  "page" : 5
}}, {contentType=application/xml, example=<null>
  <centrePoint>3.149</centrePoint>
  <pageSize>123</pageSize>
  <total>123</total>
  <page>123</page>
</null>}]
     
     - parameter stopTypes: (query) a list of stopTypes that should be returned (a list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint) 
     - parameter locationLat: (query)  
     - parameter locationLon: (query)  
     - parameter radius: (query) the radius of the bounding circle in metres (default : 200) (optional)
     - parameter useStopPointHierarchy: (query) Re-arrange the output into a parent/child hierarchy (optional)
     - parameter modes: (query) the list of modes to search (comma separated mode names e.g. tube,dlr) (optional)
     - parameter categories: (query) an optional list of comma separated property categories to return in the StopPoint&#39;s property bag. If null or empty, all categories of property are returned. Pass the keyword \&quot;none\&quot; to return no properties (a valid list of categories can be obtained from the /StopPoint/Meta/categories endpoint) (optional)
     - parameter returnLines: (query) true to return the lines that each stop point serves as a nested resource (optional)

     - returns: RequestBuilder<TflApiPresentationEntitiesStopPointsResponse> 
     */
    open class func stopPointGetByGeoPointWithRequestBuilder(stopTypes: [String], locationLat: Double, locationLon: Double, radius: Int? = nil, useStopPointHierarchy: Bool? = nil, modes: [String]? = nil, categories: [String]? = nil, returnLines: Bool? = nil) -> RequestBuilder<TflApiPresentationEntitiesStopPointsResponse> {
        let path = "/StopPoint"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "stopTypes": stopTypes, 
            "radius": radius?.encodeToJSON(), 
            "useStopPointHierarchy": useStopPointHierarchy, 
            "modes": modes, 
            "categories": categories, 
            "returnLines": returnLines, 
            "location.lat": locationLat, 
            "location.lon": locationLon
        ])

        let requestBuilder: RequestBuilder<TflApiPresentationEntitiesStopPointsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets a list of StopPoints filtered by the modes available at that StopPoint.
     
     - parameter modes: (path) A comma-seperated list of modes e.g. tube,dlr 
     - parameter page: (query) The data set page to return. Page 1 equates to the first 1000 stop points, page 2 equates to 1001-2000 etc. Must be entered for bus mode as data set is too large. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGetByMode(modes: [String], page: Int? = nil, completion: @escaping ((_ data: TflApiPresentationEntitiesStopPointsResponse?,_ error: Error?) -> Void)) {
        stopPointGetByModeWithRequestBuilder(modes: modes, page: page).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of StopPoints filtered by the modes available at that StopPoint.
     - GET /StopPoint/Mode/{modes}
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "centrePoint" : [ 0.8008281904610115, 0.8008281904610115 ],
  "stopPoints" : [ {
    "indicator" : "indicator",
    "commonName" : "commonName",
    "modes" : [ "modes", "modes" ],
    "distance" : 9.369310271410669,
    "smsCode" : "smsCode",
    "lon" : 8.762042012749001,
    "children" : [ {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    }, {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    } ],
    "hubNaptanCode" : "hubNaptanCode",
    "stopLetter" : "stopLetter",
    "id" : "id",
    "platformName" : "platformName",
    "lines" : [ {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    }, {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    } ],
    "lat" : 6.683562403749608,
    "lineModeGroups" : [ {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    }, {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    } ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "stationNaptan" : "stationNaptan",
    "fullName" : "fullName",
    "stopType" : "stopType",
    "naptanMode" : "naptanMode",
    "url" : "url",
    "placeType" : "placeType",
    "naptanId" : "naptanId",
    "icsCode" : "icsCode",
    "lineGroup" : [ {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    }, {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    } ],
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "accessibilitySummary" : "accessibilitySummary",
    "status" : true
  }, {
    "indicator" : "indicator",
    "commonName" : "commonName",
    "modes" : [ "modes", "modes" ],
    "distance" : 9.369310271410669,
    "smsCode" : "smsCode",
    "lon" : 8.762042012749001,
    "children" : [ {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    }, {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    } ],
    "hubNaptanCode" : "hubNaptanCode",
    "stopLetter" : "stopLetter",
    "id" : "id",
    "platformName" : "platformName",
    "lines" : [ {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    }, {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    } ],
    "lat" : 6.683562403749608,
    "lineModeGroups" : [ {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    }, {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    } ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "stationNaptan" : "stationNaptan",
    "fullName" : "fullName",
    "stopType" : "stopType",
    "naptanMode" : "naptanMode",
    "url" : "url",
    "placeType" : "placeType",
    "naptanId" : "naptanId",
    "icsCode" : "icsCode",
    "lineGroup" : [ {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    }, {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    } ],
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "accessibilitySummary" : "accessibilitySummary",
    "status" : true
  } ],
  "pageSize" : 6,
  "page" : 5
}}, {contentType=application/xml, example=<null>
  <centrePoint>3.149</centrePoint>
  <pageSize>123</pageSize>
  <total>123</total>
  <page>123</page>
</null>}]
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "centrePoint" : [ 0.8008281904610115, 0.8008281904610115 ],
  "stopPoints" : [ {
    "indicator" : "indicator",
    "commonName" : "commonName",
    "modes" : [ "modes", "modes" ],
    "distance" : 9.369310271410669,
    "smsCode" : "smsCode",
    "lon" : 8.762042012749001,
    "children" : [ {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    }, {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    } ],
    "hubNaptanCode" : "hubNaptanCode",
    "stopLetter" : "stopLetter",
    "id" : "id",
    "platformName" : "platformName",
    "lines" : [ {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    }, {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    } ],
    "lat" : 6.683562403749608,
    "lineModeGroups" : [ {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    }, {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    } ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "stationNaptan" : "stationNaptan",
    "fullName" : "fullName",
    "stopType" : "stopType",
    "naptanMode" : "naptanMode",
    "url" : "url",
    "placeType" : "placeType",
    "naptanId" : "naptanId",
    "icsCode" : "icsCode",
    "lineGroup" : [ {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    }, {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    } ],
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "accessibilitySummary" : "accessibilitySummary",
    "status" : true
  }, {
    "indicator" : "indicator",
    "commonName" : "commonName",
    "modes" : [ "modes", "modes" ],
    "distance" : 9.369310271410669,
    "smsCode" : "smsCode",
    "lon" : 8.762042012749001,
    "children" : [ {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    }, {
      "commonName" : "commonName",
      "placeType" : "placeType",
      "distance" : 0.8008281904610115,
      "children" : [ null, null ],
      "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
      "lon" : 1.4658129805029452,
      "id" : "id",
      "additionalProperties" : [ {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      }, {
        "sourceSystemKey" : "sourceSystemKey",
        "modified" : "2000-01-23T04:56:07.000+00:00",
        "category" : "category",
        "value" : "value",
        "key" : "key"
      } ],
      "url" : "url",
      "lat" : 6.027456183070403
    } ],
    "hubNaptanCode" : "hubNaptanCode",
    "stopLetter" : "stopLetter",
    "id" : "id",
    "platformName" : "platformName",
    "lines" : [ {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    }, {
      "crowding" : {
        "trainLoadings" : [ {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        }, {
          "naptanTo" : "naptanTo",
          "line" : "line",
          "timeSlice" : "timeSlice",
          "platformDirection" : "platformDirection",
          "value" : 1,
          "lineDirection" : "lineDirection",
          "direction" : "direction"
        } ],
        "passengerFlows" : [ {
          "timeSlice" : "timeSlice",
          "value" : 7
        }, {
          "timeSlice" : "timeSlice",
          "value" : 7
        } ]
      },
      "name" : "name",
      "fullName" : "fullName",
      "id" : "id",
      "type" : "type",
      "uri" : "uri",
      "routeType" : "Unknown",
      "status" : "Unknown"
    } ],
    "lat" : 6.683562403749608,
    "lineModeGroups" : [ {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    }, {
      "modeName" : "modeName",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
    } ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "stationNaptan" : "stationNaptan",
    "fullName" : "fullName",
    "stopType" : "stopType",
    "naptanMode" : "naptanMode",
    "url" : "url",
    "placeType" : "placeType",
    "naptanId" : "naptanId",
    "icsCode" : "icsCode",
    "lineGroup" : [ {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    }, {
      "naptanIdReference" : "naptanIdReference",
      "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
      "stationAtcoCode" : "stationAtcoCode"
    } ],
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "accessibilitySummary" : "accessibilitySummary",
    "status" : true
  } ],
  "pageSize" : 6,
  "page" : 5
}}, {contentType=application/xml, example=<null>
  <centrePoint>3.149</centrePoint>
  <pageSize>123</pageSize>
  <total>123</total>
  <page>123</page>
</null>}]
     
     - parameter modes: (path) A comma-seperated list of modes e.g. tube,dlr 
     - parameter page: (query) The data set page to return. Page 1 equates to the first 1000 stop points, page 2 equates to 1001-2000 etc. Must be entered for bus mode as data set is too large. (optional)

     - returns: RequestBuilder<TflApiPresentationEntitiesStopPointsResponse> 
     */
    open class func stopPointGetByModeWithRequestBuilder(modes: [String], page: Int? = nil) -> RequestBuilder<TflApiPresentationEntitiesStopPointsResponse> {
        var path = "/StopPoint/Mode/{modes}"
        let modesPreEscape = "\(modes)"
        let modesPostEscape = modesPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{modes}", with: modesPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": page?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<TflApiPresentationEntitiesStopPointsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets a StopPoint for a given sms code.
     
     - parameter _id: (path) A 5-digit Countdown Bus Stop Code e.g. 73241, 50435, 56334. 
     - parameter output: (query) If set to \&quot;web\&quot;, a 302 redirect to relevant website bus stop page is returned. Valid values are : web. All other values are ignored. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGetBySms(_id: String, output: String? = nil, completion: @escaping ((_ data: SystemObject?,_ error: Error?) -> Void)) {
        stopPointGetBySmsWithRequestBuilder(_id: _id, output: output).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a StopPoint for a given sms code.
     - GET /StopPoint/Sms/{id}
     - examples: [{contentType=application/json, example={ }}, {contentType=application/xml, example=<null>
</null>}]
     - examples: [{contentType=application/json, example={ }}, {contentType=application/xml, example=<null>
</null>}]
     
     - parameter _id: (path) A 5-digit Countdown Bus Stop Code e.g. 73241, 50435, 56334. 
     - parameter output: (query) If set to \&quot;web\&quot;, a 302 redirect to relevant website bus stop page is returned. Valid values are : web. All other values are ignored. (optional)

     - returns: RequestBuilder<SystemObject> 
     */
    open class func stopPointGetBySmsWithRequestBuilder(_id: String, output: String? = nil) -> RequestBuilder<SystemObject> {
        var path = "/StopPoint/Sms/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "output": output
        ])

        let requestBuilder: RequestBuilder<SystemObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets all stop points of a given type
     
     - parameter types: (path) A comma-separated list of the types to return. Max. approx. 12 types.               A list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGetByType(types: [String], completion: @escaping ((_ data: [TflApiPresentationEntitiesStopPoint]?,_ error: Error?) -> Void)) {
        stopPointGetByTypeWithRequestBuilder(types: types).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets all stop points of a given type
     - GET /StopPoint/Type/{types}
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     
     - parameter types: (path) A comma-separated list of the types to return. Max. approx. 12 types.               A list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint. 

     - returns: RequestBuilder<[TflApiPresentationEntitiesStopPoint]> 
     */
    open class func stopPointGetByTypeWithRequestBuilder(types: [String]) -> RequestBuilder<[TflApiPresentationEntitiesStopPoint]> {
        var path = "/StopPoint/Type/{types}"
        let typesPreEscape = "\(types)"
        let typesPostEscape = typesPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{types}", with: typesPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesStopPoint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets all the stop points of given type(s) with a page number
     
     - parameter types: (path)  
     - parameter page: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGetByTypeWithPagination(types: [String], page: Int, completion: @escaping ((_ data: [TflApiPresentationEntitiesStopPoint]?,_ error: Error?) -> Void)) {
        stopPointGetByTypeWithPaginationWithRequestBuilder(types: types, page: page).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets all the stop points of given type(s) with a page number
     - GET /StopPoint/Type/{types}/page/{page}
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     
     - parameter types: (path)  
     - parameter page: (path)  

     - returns: RequestBuilder<[TflApiPresentationEntitiesStopPoint]> 
     */
    open class func stopPointGetByTypeWithPaginationWithRequestBuilder(types: [String], page: Int) -> RequestBuilder<[TflApiPresentationEntitiesStopPoint]> {
        var path = "/StopPoint/Type/{types}/page/{page}"
        let typesPreEscape = "\(types)"
        let typesPostEscape = typesPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{types}", with: typesPostEscape, options: .literal, range: nil)
        let pagePreEscape = "\(page)"
        let pagePostEscape = pagePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{page}", with: pagePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesStopPoint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get car parks corresponding to the given stop point id.
     
     - parameter stopPointId: (path) stopPointId is required to get the car parks. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGetCarParksById(stopPointId: String, completion: @escaping ((_ data: [TflApiPresentationEntitiesPlace]?,_ error: Error?) -> Void)) {
        stopPointGetCarParksByIdWithRequestBuilder(stopPointId: stopPointId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get car parks corresponding to the given stop point id.
     - GET /StopPoint/{stopPointId}/CarParks
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
}, {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
}, {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     
     - parameter stopPointId: (path) stopPointId is required to get the car parks. 

     - returns: RequestBuilder<[TflApiPresentationEntitiesPlace]> 
     */
    open class func stopPointGetCarParksByIdWithRequestBuilder(stopPointId: String) -> RequestBuilder<[TflApiPresentationEntitiesPlace]> {
        var path = "/StopPoint/{stopPointId}/CarParks"
        let stopPointIdPreEscape = "\(stopPointId)"
        let stopPointIdPostEscape = stopPointIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{stopPointId}", with: stopPointIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesPlace]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets the service types for a given stoppoint
     
     - parameter _id: (query) The Naptan id of the stop 
     - parameter lineIds: (query) The lines which contain the given Naptan id (all lines relevant to the given stoppoint if empty) (optional)
     - parameter modes: (query) The modes which the lines are relevant to (all if empty) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGetServiceTypes(_id: String, lineIds: [String]? = nil, modes: [String]? = nil, completion: @escaping ((_ data: [TflApiPresentationEntitiesLineServiceType]?,_ error: Error?) -> Void)) {
        stopPointGetServiceTypesWithRequestBuilder(_id: _id, lineIds: lineIds, modes: modes).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the service types for a given stoppoint
     - GET /StopPoint/ServiceTypes
     - examples: [{contentType=application/json, example=[ {
  "lineSpecificServiceTypes" : [ {
    "serviceType" : {
      "name" : "name",
      "uri" : "uri"
    },
    "stopServesServiceType" : true
  }, {
    "serviceType" : {
      "name" : "name",
      "uri" : "uri"
    },
    "stopServesServiceType" : true
  } ],
  "lineName" : "lineName"
}, {
  "lineSpecificServiceTypes" : [ {
    "serviceType" : {
      "name" : "name",
      "uri" : "uri"
    },
    "stopServesServiceType" : true
  }, {
    "serviceType" : {
      "name" : "name",
      "uri" : "uri"
    },
    "stopServesServiceType" : true
  } ],
  "lineName" : "lineName"
} ]}, {contentType=application/xml, example=<null>
  <lineName>aeiou</lineName>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "lineSpecificServiceTypes" : [ {
    "serviceType" : {
      "name" : "name",
      "uri" : "uri"
    },
    "stopServesServiceType" : true
  }, {
    "serviceType" : {
      "name" : "name",
      "uri" : "uri"
    },
    "stopServesServiceType" : true
  } ],
  "lineName" : "lineName"
}, {
  "lineSpecificServiceTypes" : [ {
    "serviceType" : {
      "name" : "name",
      "uri" : "uri"
    },
    "stopServesServiceType" : true
  }, {
    "serviceType" : {
      "name" : "name",
      "uri" : "uri"
    },
    "stopServesServiceType" : true
  } ],
  "lineName" : "lineName"
} ]}, {contentType=application/xml, example=<null>
  <lineName>aeiou</lineName>
</null>}]
     
     - parameter _id: (query) The Naptan id of the stop 
     - parameter lineIds: (query) The lines which contain the given Naptan id (all lines relevant to the given stoppoint if empty) (optional)
     - parameter modes: (query) The modes which the lines are relevant to (all if empty) (optional)

     - returns: RequestBuilder<[TflApiPresentationEntitiesLineServiceType]> 
     */
    open class func stopPointGetServiceTypesWithRequestBuilder(_id: String, lineIds: [String]? = nil, modes: [String]? = nil) -> RequestBuilder<[TflApiPresentationEntitiesLineServiceType]> {
        let path = "/StopPoint/ServiceTypes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": _id, 
            "lineIds": lineIds, 
            "modes": modes
        ])

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesLineServiceType]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets a list of taxi ranks corresponding to the given stop point id.
     
     - parameter stopPointId: (path) stopPointId is required to get the taxi ranks. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGetTaxiRanksByIds(stopPointId: String, completion: @escaping ((_ data: [TflApiPresentationEntitiesPlace]?,_ error: Error?) -> Void)) {
        stopPointGetTaxiRanksByIdsWithRequestBuilder(stopPointId: stopPointId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of taxi ranks corresponding to the given stop point id.
     - GET /StopPoint/{stopPointId}/TaxiRanks
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
}, {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
}, {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     
     - parameter stopPointId: (path) stopPointId is required to get the taxi ranks. 

     - returns: RequestBuilder<[TflApiPresentationEntitiesPlace]> 
     */
    open class func stopPointGetTaxiRanksByIdsWithRequestBuilder(stopPointId: String) -> RequestBuilder<[TflApiPresentationEntitiesPlace]> {
        var path = "/StopPoint/{stopPointId}/TaxiRanks"
        let stopPointIdPreEscape = "\(stopPointId)"
        let stopPointIdPostEscape = stopPointIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{stopPointId}", with: stopPointIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesPlace]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a list of places corresponding to a given id and place types.
     
     - parameter _id: (path) A naptan id for a stop point (station naptan code e.g. 940GZZLUASL). 
     - parameter placeTypes: (query) A comcomma-separated value representing the place types. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointGet_0(_id: String, placeTypes: [String], completion: @escaping ((_ data: [TflApiPresentationEntitiesPlace]?,_ error: Error?) -> Void)) {
        stopPointGet_0WithRequestBuilder(_id: _id, placeTypes: placeTypes).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a list of places corresponding to a given id and place types.
     - GET /StopPoint/{id}/placeTypes
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
}, {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
}, {
  "commonName" : "commonName",
  "placeType" : "placeType",
  "distance" : 0.8008281904610115,
  "children" : [ null, null ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "lon" : 1.4658129805029452,
  "id" : "id",
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "url" : "url",
  "lat" : 6.027456183070403
} ]}, {contentType=application/xml, example=<null>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     
     - parameter _id: (path) A naptan id for a stop point (station naptan code e.g. 940GZZLUASL). 
     - parameter placeTypes: (query) A comcomma-separated value representing the place types. 

     - returns: RequestBuilder<[TflApiPresentationEntitiesPlace]> 
     */
    open class func stopPointGet_0WithRequestBuilder(_id: String, placeTypes: [String]) -> RequestBuilder<[TflApiPresentationEntitiesPlace]> {
        var path = "/StopPoint/{id}/placeTypes"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "placeTypes": placeTypes
        ])

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesPlace]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets the list of available StopPoint additional information categories
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointMetaCategories(completion: @escaping ((_ data: [TflApiPresentationEntitiesStopPointCategory]?,_ error: Error?) -> Void)) {
        stopPointMetaCategoriesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the list of available StopPoint additional information categories
     - GET /StopPoint/Meta/Categories
     - examples: [{contentType=application/json, example=[ {
  "category" : "category",
  "availableKeys" : [ "availableKeys", "availableKeys" ]
}, {
  "category" : "category",
  "availableKeys" : [ "availableKeys", "availableKeys" ]
} ]}, {contentType=application/xml, example=<null>
  <category>aeiou</category>
  <availableKeys>aeiou</availableKeys>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "category" : "category",
  "availableKeys" : [ "availableKeys", "availableKeys" ]
}, {
  "category" : "category",
  "availableKeys" : [ "availableKeys", "availableKeys" ]
} ]}, {contentType=application/xml, example=<null>
  <category>aeiou</category>
  <availableKeys>aeiou</availableKeys>
</null>}]

     - returns: RequestBuilder<[TflApiPresentationEntitiesStopPointCategory]> 
     */
    open class func stopPointMetaCategoriesWithRequestBuilder() -> RequestBuilder<[TflApiPresentationEntitiesStopPointCategory]> {
        let path = "/StopPoint/Meta/Categories"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesStopPointCategory]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets the list of available StopPoint modes
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointMetaModes(completion: @escaping ((_ data: [TflApiPresentationEntitiesMode]?,_ error: Error?) -> Void)) {
        stopPointMetaModesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the list of available StopPoint modes
     - GET /StopPoint/Meta/Modes
     - examples: [{contentType=application/json, example=[ {
  "modeName" : "modeName",
  "isTflService" : true,
  "isFarePaying" : true,
  "isScheduledService" : true
}, {
  "modeName" : "modeName",
  "isTflService" : true,
  "isFarePaying" : true,
  "isScheduledService" : true
} ]}, {contentType=application/xml, example=<null>
  <isTflService>true</isTflService>
  <isFarePaying>true</isFarePaying>
  <isScheduledService>true</isScheduledService>
  <modeName>aeiou</modeName>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "modeName" : "modeName",
  "isTflService" : true,
  "isFarePaying" : true,
  "isScheduledService" : true
}, {
  "modeName" : "modeName",
  "isTflService" : true,
  "isFarePaying" : true,
  "isScheduledService" : true
} ]}, {contentType=application/xml, example=<null>
  <isTflService>true</isTflService>
  <isFarePaying>true</isFarePaying>
  <isScheduledService>true</isScheduledService>
  <modeName>aeiou</modeName>
</null>}]

     - returns: RequestBuilder<[TflApiPresentationEntitiesMode]> 
     */
    open class func stopPointMetaModesWithRequestBuilder() -> RequestBuilder<[TflApiPresentationEntitiesMode]> {
        let path = "/StopPoint/Meta/Modes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesMode]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Gets the list of available StopPoint types
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointMetaStopTypes(completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        stopPointMetaStopTypesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the list of available StopPoint types
     - GET /StopPoint/Meta/StopTypes
     - examples: [{contentType=application/json, example=[ "", "" ]}, {contentType=application/xml, example=aeiou}]
     - examples: [{contentType=application/json, example=[ "", "" ]}, {contentType=application/xml, example=aeiou}]

     - returns: RequestBuilder<[String]> 
     */
    open class func stopPointMetaStopTypesWithRequestBuilder() -> RequestBuilder<[String]> {
        let path = "/StopPoint/Meta/StopTypes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[String]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter serviceTypes
     */
    public enum ServiceTypes_stopPointReachableFrom: String { 
        case regular = "Regular"
        case night = "Night"
    }

    /**
     Gets Stopoints that are reachable from a station/line combination.
     
     - parameter _id: (path) The id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) of the stop point to filter by 
     - parameter lineId: (path) Line id of the line to filter by (e.g. victoria) 
     - parameter serviceTypes: (query) A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to &#39;Regular&#39; if not specified (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointReachableFrom(_id: String, lineId: String, serviceTypes: [String]? = nil, completion: @escaping ((_ data: [TflApiPresentationEntitiesStopPoint]?,_ error: Error?) -> Void)) {
        stopPointReachableFromWithRequestBuilder(_id: _id, lineId: lineId, serviceTypes: serviceTypes).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets Stopoints that are reachable from a station/line combination.
     - GET /StopPoint/{id}/CanReachOnLine/{lineId}
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
}, {
  "indicator" : "indicator",
  "commonName" : "commonName",
  "modes" : [ "modes", "modes" ],
  "distance" : 9.369310271410669,
  "smsCode" : "smsCode",
  "lon" : 8.762042012749001,
  "children" : [ {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  }, {
    "commonName" : "commonName",
    "placeType" : "placeType",
    "distance" : 0.8008281904610115,
    "children" : [ null, null ],
    "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
    "lon" : 1.4658129805029452,
    "id" : "id",
    "additionalProperties" : [ {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    }, {
      "sourceSystemKey" : "sourceSystemKey",
      "modified" : "2000-01-23T04:56:07.000+00:00",
      "category" : "category",
      "value" : "value",
      "key" : "key"
    } ],
    "url" : "url",
    "lat" : 6.027456183070403
  } ],
  "hubNaptanCode" : "hubNaptanCode",
  "stopLetter" : "stopLetter",
  "id" : "id",
  "platformName" : "platformName",
  "lines" : [ {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  }, {
    "crowding" : {
      "trainLoadings" : [ {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      }, {
        "naptanTo" : "naptanTo",
        "line" : "line",
        "timeSlice" : "timeSlice",
        "platformDirection" : "platformDirection",
        "value" : 1,
        "lineDirection" : "lineDirection",
        "direction" : "direction"
      } ],
      "passengerFlows" : [ {
        "timeSlice" : "timeSlice",
        "value" : 7
      }, {
        "timeSlice" : "timeSlice",
        "value" : 7
      } ]
    },
    "name" : "name",
    "fullName" : "fullName",
    "id" : "id",
    "type" : "type",
    "uri" : "uri",
    "routeType" : "Unknown",
    "status" : "Unknown"
  } ],
  "lat" : 6.683562403749608,
  "lineModeGroups" : [ {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  }, {
    "modeName" : "modeName",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ]
  } ],
  "childrenUrls" : [ "childrenUrls", "childrenUrls" ],
  "stationNaptan" : "stationNaptan",
  "fullName" : "fullName",
  "stopType" : "stopType",
  "naptanMode" : "naptanMode",
  "url" : "url",
  "placeType" : "placeType",
  "naptanId" : "naptanId",
  "icsCode" : "icsCode",
  "lineGroup" : [ {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  }, {
    "naptanIdReference" : "naptanIdReference",
    "lineIdentifier" : [ "lineIdentifier", "lineIdentifier" ],
    "stationAtcoCode" : "stationAtcoCode"
  } ],
  "additionalProperties" : [ {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  }, {
    "sourceSystemKey" : "sourceSystemKey",
    "modified" : "2000-01-23T04:56:07.000+00:00",
    "category" : "category",
    "value" : "value",
    "key" : "key"
  } ],
  "accessibilitySummary" : "accessibilitySummary",
  "status" : true
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <platformName>aeiou</platformName>
  <indicator>aeiou</indicator>
  <stopLetter>aeiou</stopLetter>
  <modes>aeiou</modes>
  <icsCode>aeiou</icsCode>
  <smsCode>aeiou</smsCode>
  <stopType>aeiou</stopType>
  <stationNaptan>aeiou</stationNaptan>
  <accessibilitySummary>aeiou</accessibilitySummary>
  <hubNaptanCode>aeiou</hubNaptanCode>
  <fullName>aeiou</fullName>
  <naptanMode>aeiou</naptanMode>
  <status>true</status>
  <id>aeiou</id>
  <url>aeiou</url>
  <commonName>aeiou</commonName>
  <distance>3.149</distance>
  <placeType>aeiou</placeType>
  <childrenUrls>aeiou</childrenUrls>
  <lat>3.149</lat>
  <lon>3.149</lon>
</null>}]
     
     - parameter _id: (path) The id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) of the stop point to filter by 
     - parameter lineId: (path) Line id of the line to filter by (e.g. victoria) 
     - parameter serviceTypes: (query) A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to &#39;Regular&#39; if not specified (optional)

     - returns: RequestBuilder<[TflApiPresentationEntitiesStopPoint]> 
     */
    open class func stopPointReachableFromWithRequestBuilder(_id: String, lineId: String, serviceTypes: [String]? = nil) -> RequestBuilder<[TflApiPresentationEntitiesStopPoint]> {
        var path = "/StopPoint/{id}/CanReachOnLine/{lineId}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let lineIdPreEscape = "\(lineId)"
        let lineIdPostEscape = lineIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{lineId}", with: lineIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "serviceTypes": serviceTypes
        ])

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesStopPoint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     * enum for parameter serviceTypes
     */
    public enum ServiceTypes_stopPointRoute: String { 
        case regular = "Regular"
        case night = "Night"
    }

    /**
     Returns the route sections for all the lines that service the given stop point ids
     
     - parameter _id: (path) A stop point id (station naptan codes e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) 
     - parameter serviceTypes: (query) A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to &#39;Regular&#39; if not specified (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointRoute(_id: String, serviceTypes: [String]? = nil, completion: @escaping ((_ data: [TflApiPresentationEntitiesStopPointRouteSection]?,_ error: Error?) -> Void)) {
        stopPointRouteWithRequestBuilder(_id: _id, serviceTypes: serviceTypes).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the route sections for all the lines that service the given stop point ids
     - GET /StopPoint/{id}/Route
     - examples: [{contentType=application/json, example=[ {
  "mode" : "mode",
  "serviceType" : "serviceType",
  "naptanId" : "naptanId",
  "routeSectionName" : "routeSectionName",
  "destinationName" : "destinationName",
  "lineId" : "lineId",
  "validFrom" : "2000-01-23T04:56:07.000+00:00",
  "lineString" : "lineString",
  "isActive" : true,
  "vehicleDestinationText" : "vehicleDestinationText",
  "validTo" : "2000-01-23T04:56:07.000+00:00",
  "direction" : "direction"
}, {
  "mode" : "mode",
  "serviceType" : "serviceType",
  "naptanId" : "naptanId",
  "routeSectionName" : "routeSectionName",
  "destinationName" : "destinationName",
  "lineId" : "lineId",
  "validFrom" : "2000-01-23T04:56:07.000+00:00",
  "lineString" : "lineString",
  "isActive" : true,
  "vehicleDestinationText" : "vehicleDestinationText",
  "validTo" : "2000-01-23T04:56:07.000+00:00",
  "direction" : "direction"
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <lineId>aeiou</lineId>
  <mode>aeiou</mode>
  <validFrom>2000-01-23T04:56:07.000Z</validFrom>
  <validTo>2000-01-23T04:56:07.000Z</validTo>
  <direction>aeiou</direction>
  <routeSectionName>aeiou</routeSectionName>
  <lineString>aeiou</lineString>
  <isActive>true</isActive>
  <serviceType>aeiou</serviceType>
  <vehicleDestinationText>aeiou</vehicleDestinationText>
  <destinationName>aeiou</destinationName>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "mode" : "mode",
  "serviceType" : "serviceType",
  "naptanId" : "naptanId",
  "routeSectionName" : "routeSectionName",
  "destinationName" : "destinationName",
  "lineId" : "lineId",
  "validFrom" : "2000-01-23T04:56:07.000+00:00",
  "lineString" : "lineString",
  "isActive" : true,
  "vehicleDestinationText" : "vehicleDestinationText",
  "validTo" : "2000-01-23T04:56:07.000+00:00",
  "direction" : "direction"
}, {
  "mode" : "mode",
  "serviceType" : "serviceType",
  "naptanId" : "naptanId",
  "routeSectionName" : "routeSectionName",
  "destinationName" : "destinationName",
  "lineId" : "lineId",
  "validFrom" : "2000-01-23T04:56:07.000+00:00",
  "lineString" : "lineString",
  "isActive" : true,
  "vehicleDestinationText" : "vehicleDestinationText",
  "validTo" : "2000-01-23T04:56:07.000+00:00",
  "direction" : "direction"
} ]}, {contentType=application/xml, example=<null>
  <naptanId>aeiou</naptanId>
  <lineId>aeiou</lineId>
  <mode>aeiou</mode>
  <validFrom>2000-01-23T04:56:07.000Z</validFrom>
  <validTo>2000-01-23T04:56:07.000Z</validTo>
  <direction>aeiou</direction>
  <routeSectionName>aeiou</routeSectionName>
  <lineString>aeiou</lineString>
  <isActive>true</isActive>
  <serviceType>aeiou</serviceType>
  <vehicleDestinationText>aeiou</vehicleDestinationText>
  <destinationName>aeiou</destinationName>
</null>}]
     
     - parameter _id: (path) A stop point id (station naptan codes e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) 
     - parameter serviceTypes: (query) A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to &#39;Regular&#39; if not specified (optional)

     - returns: RequestBuilder<[TflApiPresentationEntitiesStopPointRouteSection]> 
     */
    open class func stopPointRouteWithRequestBuilder(_id: String, serviceTypes: [String]? = nil) -> RequestBuilder<[TflApiPresentationEntitiesStopPointRouteSection]> {
        var path = "/StopPoint/{id}/Route"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "serviceTypes": serviceTypes
        ])

        let requestBuilder: RequestBuilder<[TflApiPresentationEntitiesStopPointRouteSection]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.
     
     - parameter query: (query) The query string, case-insensitive. Leading and trailing wildcards are applied automatically. 
     - parameter modes: (query) An optional, parameter separated list of the modes to filter by (optional)
     - parameter faresOnly: (query) True to only return stations in that have Fares data available for single fares to another station. (optional)
     - parameter maxResults: (query) An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,              it is possible that the flattened result set will contain more than 50 items. (optional)
     - parameter lines: (query) An optional, parameter separated list of the lines to filter by (optional)
     - parameter includeHubs: (query) If true, returns results including HUBs. (optional)
     - parameter tflOperatedNationalRailStationsOnly: (query) If the national-rail mode is included, this flag will filter the national rail stations so that only those operated by TfL are returned (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointSearch(query: String, modes: [String]? = nil, faresOnly: Bool? = nil, maxResults: Int? = nil, lines: [String]? = nil, includeHubs: Bool? = nil, tflOperatedNationalRailStationsOnly: Bool? = nil, completion: @escaping ((_ data: TflApiPresentationEntitiesSearchResponse?,_ error: Error?) -> Void)) {
        stopPointSearchWithRequestBuilder(query: query, modes: modes, faresOnly: faresOnly, maxResults: maxResults, lines: lines, includeHubs: includeHubs, tflOperatedNationalRailStationsOnly: tflOperatedNationalRailStationsOnly).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.
     - GET /StopPoint/Search
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "provider" : "provider",
  "query" : "query",
  "pageSize" : 1,
  "from" : 0,
  "page" : 6,
  "maxScore" : 7.061401241503109,
  "matches" : [ {
    "name" : "name",
    "lon" : 2.3021358869347655,
    "id" : "id",
    "url" : "url",
    "lat" : 5.637376656633329
  }, {
    "name" : "name",
    "lon" : 2.3021358869347655,
    "id" : "id",
    "url" : "url",
    "lat" : 5.637376656633329
  } ]
}}, {contentType=application/xml, example=<null>
  <query>aeiou</query>
  <from>123</from>
  <page>123</page>
  <pageSize>123</pageSize>
  <provider>aeiou</provider>
  <total>123</total>
  <maxScore>3.149</maxScore>
</null>}]
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "provider" : "provider",
  "query" : "query",
  "pageSize" : 1,
  "from" : 0,
  "page" : 6,
  "maxScore" : 7.061401241503109,
  "matches" : [ {
    "name" : "name",
    "lon" : 2.3021358869347655,
    "id" : "id",
    "url" : "url",
    "lat" : 5.637376656633329
  }, {
    "name" : "name",
    "lon" : 2.3021358869347655,
    "id" : "id",
    "url" : "url",
    "lat" : 5.637376656633329
  } ]
}}, {contentType=application/xml, example=<null>
  <query>aeiou</query>
  <from>123</from>
  <page>123</page>
  <pageSize>123</pageSize>
  <provider>aeiou</provider>
  <total>123</total>
  <maxScore>3.149</maxScore>
</null>}]
     
     - parameter query: (query) The query string, case-insensitive. Leading and trailing wildcards are applied automatically. 
     - parameter modes: (query) An optional, parameter separated list of the modes to filter by (optional)
     - parameter faresOnly: (query) True to only return stations in that have Fares data available for single fares to another station. (optional)
     - parameter maxResults: (query) An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,              it is possible that the flattened result set will contain more than 50 items. (optional)
     - parameter lines: (query) An optional, parameter separated list of the lines to filter by (optional)
     - parameter includeHubs: (query) If true, returns results including HUBs. (optional)
     - parameter tflOperatedNationalRailStationsOnly: (query) If the national-rail mode is included, this flag will filter the national rail stations so that only those operated by TfL are returned (optional)

     - returns: RequestBuilder<TflApiPresentationEntitiesSearchResponse> 
     */
    open class func stopPointSearchWithRequestBuilder(query: String, modes: [String]? = nil, faresOnly: Bool? = nil, maxResults: Int? = nil, lines: [String]? = nil, includeHubs: Bool? = nil, tflOperatedNationalRailStationsOnly: Bool? = nil) -> RequestBuilder<TflApiPresentationEntitiesSearchResponse> {
        let path = "/StopPoint/Search"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "query": query, 
            "modes": modes, 
            "faresOnly": faresOnly, 
            "maxResults": maxResults?.encodeToJSON(), 
            "lines": lines, 
            "includeHubs": includeHubs, 
            "tflOperatedNationalRailStationsOnly": tflOperatedNationalRailStationsOnly
        ])

        let requestBuilder: RequestBuilder<TflApiPresentationEntitiesSearchResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.
     
     - parameter query: (path) The query string, case-insensitive. Leading and trailing wildcards are applied automatically. 
     - parameter modes: (query) An optional, parameter separated list of the modes to filter by (optional)
     - parameter faresOnly: (query) True to only return stations in that have Fares data available for single fares to another station. (optional)
     - parameter maxResults: (query) An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,              it is possible that the flattened result set will contain more than 50 items. (optional)
     - parameter lines: (query) An optional, parameter separated list of the lines to filter by (optional)
     - parameter includeHubs: (query) If true, returns results including HUBs. (optional)
     - parameter tflOperatedNationalRailStationsOnly: (query) If the national-rail mode is included, this flag will filter the national rail stations so that only those operated by TfL are returned (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stopPointSearch_0(query: String, modes: [String]? = nil, faresOnly: Bool? = nil, maxResults: Int? = nil, lines: [String]? = nil, includeHubs: Bool? = nil, tflOperatedNationalRailStationsOnly: Bool? = nil, completion: @escaping ((_ data: TflApiPresentationEntitiesSearchResponse?,_ error: Error?) -> Void)) {
        stopPointSearch_0WithRequestBuilder(query: query, modes: modes, faresOnly: faresOnly, maxResults: maxResults, lines: lines, includeHubs: includeHubs, tflOperatedNationalRailStationsOnly: tflOperatedNationalRailStationsOnly).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.
     - GET /StopPoint/Search/{query}
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "provider" : "provider",
  "query" : "query",
  "pageSize" : 1,
  "from" : 0,
  "page" : 6,
  "maxScore" : 7.061401241503109,
  "matches" : [ {
    "name" : "name",
    "lon" : 2.3021358869347655,
    "id" : "id",
    "url" : "url",
    "lat" : 5.637376656633329
  }, {
    "name" : "name",
    "lon" : 2.3021358869347655,
    "id" : "id",
    "url" : "url",
    "lat" : 5.637376656633329
  } ]
}}, {contentType=application/xml, example=<null>
  <query>aeiou</query>
  <from>123</from>
  <page>123</page>
  <pageSize>123</pageSize>
  <provider>aeiou</provider>
  <total>123</total>
  <maxScore>3.149</maxScore>
</null>}]
     - examples: [{contentType=application/json, example={
  "total" : 5,
  "provider" : "provider",
  "query" : "query",
  "pageSize" : 1,
  "from" : 0,
  "page" : 6,
  "maxScore" : 7.061401241503109,
  "matches" : [ {
    "name" : "name",
    "lon" : 2.3021358869347655,
    "id" : "id",
    "url" : "url",
    "lat" : 5.637376656633329
  }, {
    "name" : "name",
    "lon" : 2.3021358869347655,
    "id" : "id",
    "url" : "url",
    "lat" : 5.637376656633329
  } ]
}}, {contentType=application/xml, example=<null>
  <query>aeiou</query>
  <from>123</from>
  <page>123</page>
  <pageSize>123</pageSize>
  <provider>aeiou</provider>
  <total>123</total>
  <maxScore>3.149</maxScore>
</null>}]
     
     - parameter query: (path) The query string, case-insensitive. Leading and trailing wildcards are applied automatically. 
     - parameter modes: (query) An optional, parameter separated list of the modes to filter by (optional)
     - parameter faresOnly: (query) True to only return stations in that have Fares data available for single fares to another station. (optional)
     - parameter maxResults: (query) An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,              it is possible that the flattened result set will contain more than 50 items. (optional)
     - parameter lines: (query) An optional, parameter separated list of the lines to filter by (optional)
     - parameter includeHubs: (query) If true, returns results including HUBs. (optional)
     - parameter tflOperatedNationalRailStationsOnly: (query) If the national-rail mode is included, this flag will filter the national rail stations so that only those operated by TfL are returned (optional)

     - returns: RequestBuilder<TflApiPresentationEntitiesSearchResponse> 
     */
    open class func stopPointSearch_0WithRequestBuilder(query: String, modes: [String]? = nil, faresOnly: Bool? = nil, maxResults: Int? = nil, lines: [String]? = nil, includeHubs: Bool? = nil, tflOperatedNationalRailStationsOnly: Bool? = nil) -> RequestBuilder<TflApiPresentationEntitiesSearchResponse> {
        var path = "/StopPoint/Search/{query}"
        let queryPreEscape = "\(query)"
        let queryPostEscape = queryPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{query}", with: queryPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "modes": modes, 
            "faresOnly": faresOnly, 
            "maxResults": maxResults?.encodeToJSON(), 
            "lines": lines, 
            "includeHubs": includeHubs, 
            "tflOperatedNationalRailStationsOnly": tflOperatedNationalRailStationsOnly
        ])

        let requestBuilder: RequestBuilder<TflApiPresentationEntitiesSearchResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
