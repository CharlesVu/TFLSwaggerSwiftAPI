//
// CycleSuperhighway.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/**  */

public struct CycleSuperhighway: Codable {

    public enum Status: String, Codable { 
        case unknown = "Unknown"
        case all = "All"
        case _open = "Open"
        case inProgress = "In Progress"
        case planned = "Planned"
        case plannedSubjectToFeasibilityAndConsultation = "Planned - Subject to feasibility and consultation."
        case notOpen = "Not Open"
    }
    public enum RouteType: String, Codable { 
        case unknown = "Unknown"
        case all = "All"
        case cycleSuperhighways = "Cycle Superhighways"
        case quietways = "Quietways"
        case cycleways = "Cycleways"
        case miniHollands = "Mini-Hollands"
        case centralLondonGrid = "Central London Grid"
    }
    /** The Id */
    public var _id: String?
    /** The long label to show on maps when zoomed in */
    public var label: String?
    /** The short label to show on maps */
    public var labelShort: String?
    /** A LineString or MultiLineString that forms the route of the highway */
    public var geography: SystemDataSpatialDbGeography?
    /** True if the route is split into segments */
    public var segmented: Bool?
    /** When the data was last updated */
    public var modified: Date?
    /** Cycle route status i.e Proposed, Existing etc */
    public var status: Status?
    /** Type of cycle route e.g CycleSuperhighways, Quietways, MiniHollands etc */
    public var routeType: RouteType?

    public init(_id: String?, label: String?, labelShort: String?, geography: SystemDataSpatialDbGeography?, segmented: Bool?, modified: Date?, status: Status?, routeType: RouteType?) {
        self._id = _id
        self.label = label
        self.labelShort = labelShort
        self.geography = geography
        self.segmented = segmented
        self.modified = modified
        self.status = status
        self.routeType = routeType
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case label
        case labelShort
        case geography
        case segmented
        case modified
        case status
        case routeType
    }


}

