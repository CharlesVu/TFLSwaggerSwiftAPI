//
// FaresFareDetails.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct FaresFareDetails: Codable {

    public var boundsId: Int?
    public var startDate: Date?
    public var endDate: Date?
    public var mode: String?
    public var passengerType: String?
    public var from: String?
    public var to: String?
    public var fromStation: String?
    public var toStation: String?
    public var via: String?
    public var routeCode: String?
    public var displayName: String?
    public var displayOrder: Int?
    public var routeDescription: String?
    public var validatorInformation: String?
    public var _operator: String?
    public var specialFare: Bool?
    public var throughFare: Bool?
    public var isTour: Bool?
    public var ticketsAvailable: [FaresTicket]?
    public var messages: [Message]?

    public init(boundsId: Int?, startDate: Date?, endDate: Date?, mode: String?, passengerType: String?, from: String?, to: String?, fromStation: String?, toStation: String?, via: String?, routeCode: String?, displayName: String?, displayOrder: Int?, routeDescription: String?, validatorInformation: String?, _operator: String?, specialFare: Bool?, throughFare: Bool?, isTour: Bool?, ticketsAvailable: [FaresTicket]?, messages: [Message]?) {
        self.boundsId = boundsId
        self.startDate = startDate
        self.endDate = endDate
        self.mode = mode
        self.passengerType = passengerType
        self.from = from
        self.to = to
        self.fromStation = fromStation
        self.toStation = toStation
        self.via = via
        self.routeCode = routeCode
        self.displayName = displayName
        self.displayOrder = displayOrder
        self.routeDescription = routeDescription
        self.validatorInformation = validatorInformation
        self._operator = _operator
        self.specialFare = specialFare
        self.throughFare = throughFare
        self.isTour = isTour
        self.ticketsAvailable = ticketsAvailable
        self.messages = messages
    }

    public enum CodingKeys: String, CodingKey { 
        case boundsId
        case startDate
        case endDate
        case mode
        case passengerType
        case from
        case to
        case fromStation
        case toStation
        case via
        case routeCode
        case displayName
        case displayOrder
        case routeDescription
        case validatorInformation
        case _operator = "operator"
        case specialFare
        case throughFare
        case isTour
        case ticketsAvailable
        case messages
    }


}

