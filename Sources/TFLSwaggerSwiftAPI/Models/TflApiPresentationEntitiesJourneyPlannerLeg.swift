//
// TflApiPresentationEntitiesJourneyPlannerLeg.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct TflApiPresentationEntitiesJourneyPlannerLeg: Codable {

    public var duration: Int?
    public var speed: String?
    /** Describes the action the user need to take for this section, E.g. \&quot;walk to the              district line\&quot; */
    public var instruction: TflApiPresentationEntitiesInstruction?
    public var obstacles: [TflApiPresentationEntitiesJourneyPlannerObstacle]?
    public var departureTime: Date?
    public var arrivalTime: Date?
    public var departurePoint: TflApiPresentationEntitiesPoint?
    public var arrivalPoint: TflApiPresentationEntitiesPoint?
    public var path: TflApiPresentationEntitiesJourneyPlannerPath?
    public var routeOptions: [TflApiPresentationEntitiesJourneyPlannerRouteOption]?
    public var mode: TflApiPresentationEntitiesIdentifier?
    public var disruptions: [TflApiPresentationEntitiesDisruption]?
    public var plannedWorks: [TflApiPresentationEntitiesJourneyPlannerPlannedWork]?
    public var distance: Double?
    public var isDisrupted: Bool?
    public var hasFixedLocations: Bool?

    public init(duration: Int?, speed: String?, instruction: TflApiPresentationEntitiesInstruction?, obstacles: [TflApiPresentationEntitiesJourneyPlannerObstacle]?, departureTime: Date?, arrivalTime: Date?, departurePoint: TflApiPresentationEntitiesPoint?, arrivalPoint: TflApiPresentationEntitiesPoint?, path: TflApiPresentationEntitiesJourneyPlannerPath?, routeOptions: [TflApiPresentationEntitiesJourneyPlannerRouteOption]?, mode: TflApiPresentationEntitiesIdentifier?, disruptions: [TflApiPresentationEntitiesDisruption]?, plannedWorks: [TflApiPresentationEntitiesJourneyPlannerPlannedWork]?, distance: Double?, isDisrupted: Bool?, hasFixedLocations: Bool?) {
        self.duration = duration
        self.speed = speed
        self.instruction = instruction
        self.obstacles = obstacles
        self.departureTime = departureTime
        self.arrivalTime = arrivalTime
        self.departurePoint = departurePoint
        self.arrivalPoint = arrivalPoint
        self.path = path
        self.routeOptions = routeOptions
        self.mode = mode
        self.disruptions = disruptions
        self.plannedWorks = plannedWorks
        self.distance = distance
        self.isDisrupted = isDisrupted
        self.hasFixedLocations = hasFixedLocations
    }


}

