//
// TflApiPresentationEntitiesStopPoint.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct TflApiPresentationEntitiesStopPoint: Codable {

    public var naptanId: String?
    public var platformName: String?
    /** The indicator of the stop point e.g. \&quot;Stop K\&quot; */
    public var indicator: String?
    /** The stop letter, if it could be cleansed from the Indicator e.g. \&quot;K\&quot; */
    public var stopLetter: String?
    public var modes: [String]?
    public var icsCode: String?
    public var smsCode: String?
    public var stopType: String?
    public var stationNaptan: String?
    public var accessibilitySummary: String?
    public var hubNaptanCode: String?
    public var lines: [TflApiPresentationEntitiesIdentifier]?
    public var lineGroup: [TflApiPresentationEntitiesLineGroup]?
    public var lineModeGroups: [TflApiPresentationEntitiesLineModeGroup]?
    public var fullName: String?
    public var naptanMode: String?
    public var status: Bool?
    /** A unique identifier. */
    public var _id: String?
    /** The unique location of this resource. */
    public var url: String?
    /** A human readable name. */
    public var commonName: String?
    /** The distance of the place from its search point, if this is the result              of a geographical search, otherwise zero. */
    public var distance: Double?
    /** The type of Place. See /Place/Meta/placeTypes for possible values. */
    public var placeType: String?
    /** A bag of additional key/value pairs with extra information about this place. */
    public var additionalProperties: [TflApiPresentationEntitiesAdditionalProperties]?
    public var children: [TflApiPresentationEntitiesPlace]?
    public var childrenUrls: [String]?
    /** WGS84 latitude of the location. */
    public var lat: Double?
    /** WGS84 longitude of the location. */
    public var lon: Double?

    public init(naptanId: String?, platformName: String?, indicator: String?, stopLetter: String?, modes: [String]?, icsCode: String?, smsCode: String?, stopType: String?, stationNaptan: String?, accessibilitySummary: String?, hubNaptanCode: String?, lines: [TflApiPresentationEntitiesIdentifier]?, lineGroup: [TflApiPresentationEntitiesLineGroup]?, lineModeGroups: [TflApiPresentationEntitiesLineModeGroup]?, fullName: String?, naptanMode: String?, status: Bool?, _id: String?, url: String?, commonName: String?, distance: Double?, placeType: String?, additionalProperties: [TflApiPresentationEntitiesAdditionalProperties]?, children: [TflApiPresentationEntitiesPlace]?, childrenUrls: [String]?, lat: Double?, lon: Double?) {
        self.naptanId = naptanId
        self.platformName = platformName
        self.indicator = indicator
        self.stopLetter = stopLetter
        self.modes = modes
        self.icsCode = icsCode
        self.smsCode = smsCode
        self.stopType = stopType
        self.stationNaptan = stationNaptan
        self.accessibilitySummary = accessibilitySummary
        self.hubNaptanCode = hubNaptanCode
        self.lines = lines
        self.lineGroup = lineGroup
        self.lineModeGroups = lineModeGroups
        self.fullName = fullName
        self.naptanMode = naptanMode
        self.status = status
        self._id = _id
        self.url = url
        self.commonName = commonName
        self.distance = distance
        self.placeType = placeType
        self.additionalProperties = additionalProperties
        self.children = children
        self.childrenUrls = childrenUrls
        self.lat = lat
        self.lon = lon
    }

    public enum CodingKeys: String, CodingKey { 
        case naptanId
        case platformName
        case indicator
        case stopLetter
        case modes
        case icsCode
        case smsCode
        case stopType
        case stationNaptan
        case accessibilitySummary
        case hubNaptanCode
        case lines
        case lineGroup
        case lineModeGroups
        case fullName
        case naptanMode
        case status
        case _id = "id"
        case url
        case commonName
        case distance
        case placeType
        case additionalProperties
        case children
        case childrenUrls
        case lat
        case lon
    }


}

